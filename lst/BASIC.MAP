
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              171E  0000171E  progbits  .text
            2620              171E              171E  00000000  progbits  programArea
            1720              1720              2616  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                171E
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 171E
align:                    1
follows:   not defined
vstart:                2620
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                 1720
align:     not defined
follows:   not defined
vstart:                1720
valign:                  10
vfollows:  .text

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              52                52  mainLoop
              83                83  mainLoop.ml0
              A5                A5  mainLoop.saveLine
              D3                D3  mainLoop.commonProc
              ED                ED  mainLoop.lineDoesntExist
              F4                F4  criticalError
             105               105  ctrlBreakHandler
             10E               10E  setHandler
             113               113  getLineInput
             132               132  getLineInput.getChar
             156               156  getLineInput.gspchMk
             15A               15A  getLineInput.glibspace
             183               183  getLineInput.gliCheckCase
             192               192  getLineInput.gStore
             19B               19B  getLineInput.gliExtendedChar
             19D               19D  getLineInput.gliExit
             1AD               1AD  getLineInput.gliFull
             1B9               1B9  ucChar
             1C5               1C5  ttyOutChar
             1D1               1D1  ttyOutString
             1F3               1F3  ttyIn
             1FB               1FB  ttyClear
             207               207  ttyClear.s
             20C               20C  keywordParser
             21D               21D  keywordParser.functionFinderLoop
             241               241  keywordParser.functionFound
             259               259  keywordParser.exit
             25A               25A  keywordParser.exitEmpty
             265               265  keywordParser.notLetVarAssignment
             26E               26E  runLine
             27B               27B  runLine.stringPortionProcess
             2C0               2C0  runLine.gotoNextLine
             2EA               2EA  runLine.gotoNextLineCommon
             2F6               2F6  runLine.exit
             2F7               2F7  runLine.ctrlFlowHandler
             31F               31F  runLine.badLineNumber
             32B               32B  runLine.tron
             357               357  runLine.break
             387               387  spaceSkip
             391               391  spaceSkip.exit
             392               392  getVarNameLength
             3A0               3A0  getVarNameLength.search
             3B7               3B7  getVarNameLength.exit
             3BF               3BF  getVarType
             3D6               3D6  getVarType.exit
             3DA               3DA  handleAlgebraicExpression
             3F2               3F2  handleAlgebraicExpression.handleFourthLevel
             3F7               3F7  handleAlgebraicExpression.parseLogicals
             452               452  handleAlgebraicExpression.rightShift
             463               463  handleAlgebraicExpression.leftShift
             474               474  handleAlgebraicExpression.rightRoll
             485               485  handleAlgebraicExpression.leftRoll
             496               496  handleAlgebraicExpression.imp
             4A8               4A8  handleAlgebraicExpression.not
             4B5               4B5  handleAlgebraicExpression.and
             4C4               4C4  handleAlgebraicExpression.or
             4D6               4D6  handleAlgebraicExpression.xor
             4E5               4E5  handleAlgebraicExpression.eqv
             4F7               4F7  handleAlgebraicExpression.handleThirdLevelSkip
             4FE               4FE  handleAlgebraicExpression.handleThirdLevel
             503               503  handleAlgebraicExpression.parseRelationals
             530               530  handleAlgebraicExpression.processGreater
             557               557  handleAlgebraicExpression.processLess
             57E               57E  handleAlgebraicExpression.processGeq
             5A2               5A2  handleAlgebraicExpression.processLeq
             5C6               5C6  handleAlgebraicExpression.processEq
             5E7               5E7  handleAlgebraicExpression.processNeq
             60B               60B  handleAlgebraicExpression.handleSecondLevelSkip
             60E               60E  handleAlgebraicExpression.handleSecondLevel
             613               613  handleAlgebraicExpression.parseAdditiveOperators
             627               627  handleAlgebraicExpression.processAdd
             62D               62D  handleAlgebraicExpression.processMinus
             638               638  handleAlgebraicExpression.handleFirstLevelSkip
             63B               63B  handleAlgebraicExpression.handleFirstLevel
             640               640  handleAlgebraicExpression.parseProductOperators
             67D               67D  handleAlgebraicExpression.processMult
             689               689  handleAlgebraicExpression.processDiv
             6A1               6A1  handleAlgebraicExpression.divByZero
             6BF               6BF  handleAlgebraicExpression.exponentFound
             6CF               6CF  handleAlgebraicExpression.imulLoop
             6DF               6DF  handleAlgebraicExpression.handleZerothLevelSkip
             6E2               6E2  handleAlgebraicExpression.handleZerothLevel
             6FB               6FB  handleAlgebraicExpression.varConstCheck
             70C               70C  handleAlgebraicExpression.varOrRNDFound
             73A               73A  handleAlgebraicExpression.exit
             73B               73B  handleAlgebraicExpression.varFound
             752               752  handleAlgebraicExpression.closeBracket
             75A               75A  handleAlgebraicExpression.error
             766               766  handleAlgebraicExpression.stack
             772               772  getNumericVariable
             792               792  getNumericVariable.exit
             796               796  getNumericVariable.noVar
             79A               79A  getNumericVariable.stringFoundError
             7A6               7A6  setNumericVariable
             7C6               7C6  setNumericVariable.exit
             7CA               7CA  setNumericVariable.makeEditInteger
             7D1               7D1  setNumericVariable.stringFoundError
             7DD               7DD  setStringVariable
             7EA               7EA  findOtherExpressionsOnLine
             7F3               7F3  findOtherExpressionsOnLine.exit
             7F4               7F4  funTbl
             87D               87D  whileStr
             895               895  thenStr
             89D               89D  elseStr
             938               938  badCmd
             944               944  endProg
             949               949  tron
             951               951  troff
             959               959  notWrapper
             961               961  memRead
             961               961  memWrite
             961               961  byteRead
             961               961  byteWrite
             962               962  remark
             96B               96B  oldSchoolAssignemnt
             970               970  variableAssignment
             9B3               9B3  variableAssignment.stringAssignment
             9D6               9D6  variableAssignment.syntaxError
             9E2               9E2  variableAssignment.typError
             9EE               9EE  newProgram
             A52               A52  listProgram
             A59               A59  listProgram.printLines
             A8D               A8D  listProgram.exit
             A8E               A8E  runProgram
             AB3               AB3  runProgram.endProgramPoint
             ABF               ABF  printStatement
             ABF               ABF  printStatement.printStart
             AD5               AD5  printStatement.printExpr
             AD8               AD8  printStatement.printExpr1
             AE9               AE9  printStatement.printStringVar
             B16               B16  printStatement.stringPrint
             B2E               B2E  printStatement.openSpeechMark
             B31               B31  printStatement.psvexitColon
             B34               B34  printStatement.psvexit
             B41               B41  printStatement.closespeechmarks
             B54               B54  printStatement.continue
             B5E               B5E  getInput
             B68               B68  getInput.customPrompt
             B6B               B6B  getInput.cp0
             B74               B74  getInput.error
             B80               B80  getInput.printCustomPrompt
             B83               B83  getInput.pcp0
             B8F               B8F  getInput.stopPrompt
             B9D               B9D  getInput.defaultPrompt
             BA7               BA7  getInput.noDefaultPrompt
             BE2               BE2  getInput.handleNumeric
             BF1               BF1  getInput.handleString
             BFC               BFC  getInput.commonExit
             BFD               BFD  returnToDOS
             BFF               BFF  cls
             C04               C04  dbgr
             C13               C13  dbgr.farReturn
             C3C               C3C  retScan
             C7B               C7B  retScan.initialSearch
             C90               C90  retScan.notCandidate
             C95               C95  retScan.gotoNextLine
             CA8               CA8  retScan.wordFound
             CC3               CC3  retScan.csumLoop
             CD1               CD1  retScan.exit
             CD3               CD3  retScan.noRet
             CE9               CE9  retScan.error
             CFF               CFF  wendScan
             D3E               D3E  wendScan.initialSearch
             D50               D50  wendScan.gotoNextLine
             D63               D63  wendScan.wordFound
             D95               D95  wendScan.csumLoop
             DA3               DA3  wendScan.exit
             DA5               DA5  wendScan.noWend
             DBB               DBB  wendScan.error
             DD1               DD1  nextScan
             E10               E10  nextScan.initialSearch
             E22               E22  nextScan.gotoNextLine
             E35               E35  nextScan.wordFound
             E67               E67  nextScan.csumLoop
             E75               E75  nextScan.exit
             E77               E77  nextScan.noNext
             E8D               E8D  nextScan.error
             EA3               EA3  goto
             EB8               EB8  gosub
             EEB               EEB  gosub.macroNotOverflow
             EFC               EFC  gosub.error
             F01               F01  return
             F1B               F1B  return.checksumTest
             F43               F43  return.noReturn
             F4F               F4F  forLoop
             F86               F86  forLoop.macroNotOverflow
             F9B               F9B  forLoop.flScanTo
             FB6               FB6  forLoop.flToFound
             FE6               FE6  forLoop.flVariable
            101A              101A  forLoop.exit
            1022              1022  forLoop.defaultStep
            102C              102C  forLoop.dontRunFor
            1046              1046  forLoop.unknownError
            104F              104F  forLoop.syntaxError
            1056              1056  forLoop.critError
            105B              105B  next
            1075              1075  next.checksumTest
            10A1              10A1  next.exit
            10A9              10A9  next.noMoreLooping
            10C3              10C3  next.noForNext
            10CF              10CF  while
            1102              1102  while.macroNotOverflow
            1123              1123  while.exit
            112B              112B  while.conditionFalse
            1141              1141  while.critError
            1146              1146  wend
            1164              1164  wend.checksumTest
            118E              118E  wend.whileScan
            119F              119F  wend.scanning
            11C0              11C0  wend.exit
            11C8              11C8  wend.conditionFalse
            11DE              11DE  wend.error
            11EA              11EA  wend.noWhile
            11F6              11F6  handleIf
            1223              1223  handleIf.candidatethen
            122A              122A  handleIf.else
            1254              1254  handleIf.hi0
            1281              1281  handleIf.noElse
            1282              1282  handleIf.error
            128E              128E  decimalToHex
            1293              1293  decimalToHex.processDigits
            12AF              12AF  decimalToHex.exit
            12B6              12B6  printdecimalword
            12DB              12DB  printdecimalword.noCompliment
            12F8              12F8  printdecimalword.pdw0
            1308              1308  printdecimalword.pdw1
            131D              131D  printdecimalword.printString
            132C              132C  allocateBlock
            132D              132D  allocateBlock.ab0
            135E              135E  allocateBlock.exit
            1360              1360  allocateBlock.memoryFull
            136C              136C  allocateBlock.firstAllocation
            138C              138C  findVariable
            13A1              13A1  findVariable.search
            13AD              13AD  findVariable.invalid
            13BC              13BC  findVariable.varFound
            13CB              13CB  findVariable.datFound
            13DD              13DD  findVariable.varNotFound
            13E7              13E7  findVariable.exit
            13ED              13ED  findFirstLine
            13FC              13FC  searchForProgramLine
            140C              140C  searchForProgramLine.search
            141F              141F  searchForProgramLine.lineFound
            1420              1420  insertProgramLine
            1440              1440  insertProgramLine.walk
            1454              1454  insertProgramLine.candidate
            1463              1463  insertProgramLine.sort
            1476              1476  insertProgramLine.skipLink
            1484              1484  insertProgramLine.first
            1496              1496  insertProgramLine.exit
            149C              149C  makeEditInteger
            14AF              14AF  makeEditInteger.newVar
            14DB              14DB  makeEditInteger.error
            14E7              14E7  makeEditString
            1521              1521  makeEditString.strcopy
            1535              1535  makeEditString.error
            1541              1541  terminatedstrcpy
            1542              1542  terminatedstrcpy.copy
            1552              1552  terminatedstrcpy.exit
            1554              1554  strcpy
            155D              155D  strlen
            156C              156C  memoryDetection
            158D              158D  prompt
            1592              1592  mainmsg
            15A9              15A9  cpyrt
            15E5              15E5  bytemsg
            15F3              15F3  crlf
            15F6              15F6  errmsg
            15FE              15FE  numbers
            1608              1608  varChrs
            162E              162E  noMem
            163E              163E  syntax
            164D              164D  typeError
            165D              165D  lineNoXist
            1675              1675  breakmsg
            167F              167F  stkOvflw
            1690              1690  noWend
            16A5              16A5  noWhile
            16BA              16BA  noFor
            16CD              16CD  noNext
            16E0              16E0  noReturn
            16F7              16F7  uknowner
            170B              170B  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            171E              2620  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
            1720              1720  oflowbuff
            1770              1770  stack
            24B0              24B0  stacktop
            24B8              24B8  inString
            25B8              25B8  digitString
            25E8              25E8  minMemAddr
            25F0              25F0  maxMemAddr
            25F8              25F8  strLen
            25F9              25F9  stateByte
            25FA              25FA  mcbChain
            2602              2602  lastBlock
            260A              260A  firstLinPtr
            2612              2612  firstLinNum
            2614              2614  currentLine
            2616              2616  bssLen

