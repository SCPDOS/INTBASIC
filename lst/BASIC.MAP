
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1737  00001737  progbits  .text
             F00              1737              1737  00000000  progbits  programArea
               0                 0               EF6  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1737
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1737
align:                    1
follows:   not defined
vstart:                 F00
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              47                47  mainLoop
              78                78  mainLoop.ml0
              9A                9A  mainLoop.saveLine
              C8                C8  mainLoop.commonProc
              E2                E2  mainLoop.lineDoesntExist
              E9                E9  criticalError
              FA                FA  ctrlBreakHandler
             103               103  setHandler
             10D               10D  getLineInput
             12C               12C  getLineInput.getChar
             150               150  getLineInput.gspchMk
             154               154  getLineInput.glibspace
             17D               17D  getLineInput.gliCheckCase
             18C               18C  getLineInput.gStore
             195               195  getLineInput.gliExtendedChar
             197               197  getLineInput.gliExit
             1A7               1A7  getLineInput.gliFull
             1B3               1B3  ucChar
             1C5               1C5  ttyOutChar
             1D1               1D1  ttyOutString
             1F3               1F3  ttyIn
             1FB               1FB  ttyClear
             214               214  keywordParser
             225               225  keywordParser.functionFinderLoop
             249               249  keywordParser.functionFound
             261               261  keywordParser.exit
             262               262  keywordParser.exitEmpty
             26D               26D  keywordParser.notLetVarAssignment
             276               276  runLine
             283               283  runLine.stringPortionProcess
             2C8               2C8  runLine.gotoNextLine
             2F2               2F2  runLine.gotoNextLineCommon
             2FE               2FE  runLine.exit
             2FF               2FF  runLine.ctrlFlowHandler
             327               327  runLine.badLineNumber
             333               333  runLine.tron
             35F               35F  runLine.break
             38F               38F  spaceSkip
             399               399  spaceSkip.exit
             39A               39A  getVarNameLength
             3A8               3A8  getVarNameLength.search
             3BF               3BF  getVarNameLength.exit
             3C7               3C7  getVarType
             3DE               3DE  getVarType.exit
             3E2               3E2  handleAlgebraicExpression
             3FA               3FA  handleAlgebraicExpression.handleFourthLevel
             3FF               3FF  handleAlgebraicExpression.parseLogicals
             45A               45A  handleAlgebraicExpression.rightShift
             46B               46B  handleAlgebraicExpression.leftShift
             47C               47C  handleAlgebraicExpression.rightRoll
             48D               48D  handleAlgebraicExpression.leftRoll
             49E               49E  handleAlgebraicExpression.imp
             4B0               4B0  handleAlgebraicExpression.not
             4BD               4BD  handleAlgebraicExpression.and
             4CC               4CC  handleAlgebraicExpression.or
             4DE               4DE  handleAlgebraicExpression.xor
             4ED               4ED  handleAlgebraicExpression.eqv
             4FF               4FF  handleAlgebraicExpression.handleThirdLevelSkip
             506               506  handleAlgebraicExpression.handleThirdLevel
             50B               50B  handleAlgebraicExpression.parseRelationals
             538               538  handleAlgebraicExpression.processGreater
             55F               55F  handleAlgebraicExpression.processLess
             586               586  handleAlgebraicExpression.processGeq
             5AA               5AA  handleAlgebraicExpression.processLeq
             5CE               5CE  handleAlgebraicExpression.processEq
             5EF               5EF  handleAlgebraicExpression.processNeq
             613               613  handleAlgebraicExpression.handleSecondLevelSkip
             616               616  handleAlgebraicExpression.handleSecondLevel
             61B               61B  handleAlgebraicExpression.parseAdditiveOperators
             62F               62F  handleAlgebraicExpression.processAdd
             635               635  handleAlgebraicExpression.processMinus
             640               640  handleAlgebraicExpression.handleFirstLevelSkip
             643               643  handleAlgebraicExpression.handleFirstLevel
             648               648  handleAlgebraicExpression.parseProductOperators
             685               685  handleAlgebraicExpression.processMult
             691               691  handleAlgebraicExpression.processDiv
             6A9               6A9  handleAlgebraicExpression.divByZero
             6C7               6C7  handleAlgebraicExpression.exponentFound
             6D7               6D7  handleAlgebraicExpression.imulLoop
             6E7               6E7  handleAlgebraicExpression.handleZerothLevelSkip
             6EA               6EA  handleAlgebraicExpression.handleZerothLevel
             703               703  handleAlgebraicExpression.varConstCheck
             714               714  handleAlgebraicExpression.varOrRNDFound
             742               742  handleAlgebraicExpression.exit
             743               743  handleAlgebraicExpression.varFound
             75A               75A  handleAlgebraicExpression.closeBracket
             762               762  handleAlgebraicExpression.error
             76E               76E  handleAlgebraicExpression.stack
             77A               77A  getNumericVariable
             79A               79A  getNumericVariable.exit
             79E               79E  getNumericVariable.noVar
             7A2               7A2  getNumericVariable.stringFoundError
             7AE               7AE  setNumericVariable
             7CE               7CE  setNumericVariable.exit
             7D2               7D2  setNumericVariable.makeEditInteger
             7D9               7D9  setNumericVariable.stringFoundError
             7E5               7E5  setStringVariable
             7F2               7F2  findOtherExpressionsOnLine
             7FB               7FB  findOtherExpressionsOnLine.exit
             7FC               7FC  funTbl
             885               885  whileStr
             89D               89D  thenStr
             8A5               8A5  elseStr
             940               940  badCmd
             94C               94C  endProg
             951               951  tron
             959               959  troff
             961               961  notWrapper
             969               969  memRead
             969               969  memWrite
             969               969  byteRead
             969               969  byteWrite
             96A               96A  remark
             973               973  oldSchoolAssignemnt
             978               978  variableAssignment
             9BB               9BB  variableAssignment.stringAssignment
             9DE               9DE  variableAssignment.syntaxError
             9EA               9EA  variableAssignment.typError
             9F6               9F6  newProgram
             A5A               A5A  listProgram
             A61               A61  listProgram.printLines
             A95               A95  listProgram.exit
             A96               A96  runProgram
             ABB               ABB  runProgram.endProgramPoint
             AC7               AC7  printStatement
             AC7               AC7  printStatement.printStart
             ADD               ADD  printStatement.printExpr
             AE0               AE0  printStatement.printExpr1
             AF1               AF1  printStatement.printStringVar
             B1E               B1E  printStatement.stringPrint
             B36               B36  printStatement.openSpeechMark
             B39               B39  printStatement.psvexitColon
             B3C               B3C  printStatement.psvexit
             B49               B49  printStatement.closespeechmarks
             B5C               B5C  printStatement.continue
             B66               B66  getInput
             B70               B70  getInput.customPrompt
             B73               B73  getInput.cp0
             B7C               B7C  getInput.error
             B88               B88  getInput.printCustomPrompt
             B8B               B8B  getInput.pcp0
             B97               B97  getInput.stopPrompt
             BA5               BA5  getInput.defaultPrompt
             BAF               BAF  getInput.noDefaultPrompt
             BEA               BEA  getInput.handleNumeric
             BF9               BF9  getInput.handleString
             C04               C04  getInput.commonExit
             C05               C05  returnToDOS
             C07               C07  cls
             C0C               C0C  dbgr
             C2C               C2C  dbgr.farReturn
             C55               C55  retScan
             C94               C94  retScan.initialSearch
             CA9               CA9  retScan.notCandidate
             CAE               CAE  retScan.gotoNextLine
             CC1               CC1  retScan.wordFound
             CDC               CDC  retScan.csumLoop
             CEA               CEA  retScan.exit
             CEC               CEC  retScan.noRet
             D02               D02  retScan.error
             D18               D18  wendScan
             D57               D57  wendScan.initialSearch
             D69               D69  wendScan.gotoNextLine
             D7C               D7C  wendScan.wordFound
             DAE               DAE  wendScan.csumLoop
             DBC               DBC  wendScan.exit
             DBE               DBE  wendScan.noWend
             DD4               DD4  wendScan.error
             DEA               DEA  nextScan
             E29               E29  nextScan.initialSearch
             E3B               E3B  nextScan.gotoNextLine
             E4E               E4E  nextScan.wordFound
             E80               E80  nextScan.csumLoop
             E8E               E8E  nextScan.exit
             E90               E90  nextScan.noNext
             EA6               EA6  nextScan.error
             EBC               EBC  goto
             ED1               ED1  gosub
             F04               F04  gosub.macroNotOverflow
             F15               F15  gosub.error
             F1A               F1A  return
             F34               F34  return.checksumTest
             F5C               F5C  return.noReturn
             F68               F68  forLoop
             F9F               F9F  forLoop.macroNotOverflow
             FB4               FB4  forLoop.flScanTo
             FCF               FCF  forLoop.flToFound
             FFF               FFF  forLoop.flVariable
            1033              1033  forLoop.exit
            103B              103B  forLoop.defaultStep
            1045              1045  forLoop.dontRunFor
            105F              105F  forLoop.unknownError
            1068              1068  forLoop.syntaxError
            106F              106F  forLoop.critError
            1074              1074  next
            108E              108E  next.checksumTest
            10BA              10BA  next.exit
            10C2              10C2  next.noMoreLooping
            10DC              10DC  next.noForNext
            10E8              10E8  while
            111B              111B  while.macroNotOverflow
            113C              113C  while.exit
            1144              1144  while.conditionFalse
            115A              115A  while.critError
            115F              115F  wend
            117D              117D  wend.checksumTest
            11A7              11A7  wend.whileScan
            11B8              11B8  wend.scanning
            11D9              11D9  wend.exit
            11E1              11E1  wend.conditionFalse
            11F7              11F7  wend.error
            1203              1203  wend.noWhile
            120F              120F  handleIf
            123C              123C  handleIf.candidatethen
            1243              1243  handleIf.else
            126D              126D  handleIf.hi0
            129A              129A  handleIf.noElse
            129B              129B  handleIf.error
            12A7              12A7  decimalToHex
            12AC              12AC  decimalToHex.processDigits
            12C8              12C8  decimalToHex.exit
            12CF              12CF  printdecimalword
            12F4              12F4  printdecimalword.noCompliment
            1311              1311  printdecimalword.pdw0
            1321              1321  printdecimalword.pdw1
            1336              1336  printdecimalword.printString
            1345              1345  allocateBlock
            1346              1346  allocateBlock.ab0
            1377              1377  allocateBlock.exit
            1379              1379  allocateBlock.memoryFull
            1385              1385  allocateBlock.firstAllocation
            13A5              13A5  findVariable
            13BA              13BA  findVariable.search
            13C6              13C6  findVariable.invalid
            13D5              13D5  findVariable.varFound
            13E4              13E4  findVariable.datFound
            13F6              13F6  findVariable.varNotFound
            1400              1400  findVariable.exit
            1406              1406  findFirstLine
            1415              1415  searchForProgramLine
            1425              1425  searchForProgramLine.search
            1438              1438  searchForProgramLine.lineFound
            1439              1439  insertProgramLine
            1459              1459  insertProgramLine.walk
            146D              146D  insertProgramLine.candidate
            147C              147C  insertProgramLine.sort
            148F              148F  insertProgramLine.skipLink
            149D              149D  insertProgramLine.first
            14AF              14AF  insertProgramLine.exit
            14B5              14B5  makeEditInteger
            14C8              14C8  makeEditInteger.newVar
            14F4              14F4  makeEditInteger.error
            1500              1500  makeEditString
            153A              153A  makeEditString.strcopy
            154E              154E  makeEditString.error
            155A              155A  terminatedstrcpy
            155B              155B  terminatedstrcpy.copy
            156B              156B  terminatedstrcpy.exit
            156D              156D  strcpy
            1576              1576  strlen
            1585              1585  memoryDetection
            15A6              15A6  prompt
            15AB              15AB  mainmsg
            15C2              15C2  cpyrt
            15FE              15FE  bytemsg
            160C              160C  crlf
            160F              160F  errmsg
            1617              1617  numbers
            1621              1621  varChrs
            1647              1647  noMem
            1657              1657  syntax
            1666              1666  typeError
            1676              1676  lineNoXist
            168E              168E  breakmsg
            1698              1698  stkOvflw
            16A9              16A9  noWend
            16BE              16BE  noWhile
            16D3              16D3  noFor
            16E6              16E6  noNext
            16F9              16F9  noReturn
            1710              1710  uknowner
            1724              1724  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            1737               F00  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  oflowbuff
              50                50  stack
             D90               D90  stacktop
             D98               D98  inString
             E98               E98  digitString
             EC8               EC8  minMemAddr
             ED0               ED0  maxMemAddr
             ED8               ED8  strLen
             ED9               ED9  stateByte
             EDA               EDA  mcbChain
             EE2               EE2  lastBlock
             EEA               EEA  firstLinPtr
             EF2               EF2  firstLinNum
             EF4               EF4  currentLine
             EF6               EF6  bssLen

