
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1726  00001726  progbits  .text
            2630              1726              1726  00000000  progbits  programArea
            1730              1730              2626  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1726
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1726
align:                    1
follows:   not defined
vstart:                2630
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                 1730
align:     not defined
follows:   not defined
vstart:                1730
valign:                  10
vfollows:  .text

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              52                52  mainLoop
              83                83  mainLoop.ml0
              A5                A5  mainLoop.saveLine
              D3                D3  mainLoop.commonProc
              ED                ED  mainLoop.lineDoesntExist
              F4                F4  criticalError
             105               105  ctrlBreakHandler
             10E               10E  setHandler
             113               113  getLineInput
             132               132  getLineInput.getChar
             156               156  getLineInput.gspchMk
             15A               15A  getLineInput.glibspace
             183               183  getLineInput.gliCheckCase
             192               192  getLineInput.gStore
             19B               19B  getLineInput.gliExtendedChar
             19D               19D  getLineInput.gliExit
             1AD               1AD  getLineInput.gliFull
             1B9               1B9  ucChar
             1C5               1C5  ttyOutChar
             1D1               1D1  ttyOutString
             1F3               1F3  ttyIn
             1FB               1FB  ttyClear
             214               214  keywordParser
             225               225  keywordParser.functionFinderLoop
             249               249  keywordParser.functionFound
             261               261  keywordParser.exit
             262               262  keywordParser.exitEmpty
             26D               26D  keywordParser.notLetVarAssignment
             276               276  runLine
             283               283  runLine.stringPortionProcess
             2C8               2C8  runLine.gotoNextLine
             2F2               2F2  runLine.gotoNextLineCommon
             2FE               2FE  runLine.exit
             2FF               2FF  runLine.ctrlFlowHandler
             327               327  runLine.badLineNumber
             333               333  runLine.tron
             35F               35F  runLine.break
             38F               38F  spaceSkip
             399               399  spaceSkip.exit
             39A               39A  getVarNameLength
             3A8               3A8  getVarNameLength.search
             3BF               3BF  getVarNameLength.exit
             3C7               3C7  getVarType
             3DE               3DE  getVarType.exit
             3E2               3E2  handleAlgebraicExpression
             3FA               3FA  handleAlgebraicExpression.handleFourthLevel
             3FF               3FF  handleAlgebraicExpression.parseLogicals
             45A               45A  handleAlgebraicExpression.rightShift
             46B               46B  handleAlgebraicExpression.leftShift
             47C               47C  handleAlgebraicExpression.rightRoll
             48D               48D  handleAlgebraicExpression.leftRoll
             49E               49E  handleAlgebraicExpression.imp
             4B0               4B0  handleAlgebraicExpression.not
             4BD               4BD  handleAlgebraicExpression.and
             4CC               4CC  handleAlgebraicExpression.or
             4DE               4DE  handleAlgebraicExpression.xor
             4ED               4ED  handleAlgebraicExpression.eqv
             4FF               4FF  handleAlgebraicExpression.handleThirdLevelSkip
             506               506  handleAlgebraicExpression.handleThirdLevel
             50B               50B  handleAlgebraicExpression.parseRelationals
             538               538  handleAlgebraicExpression.processGreater
             55F               55F  handleAlgebraicExpression.processLess
             586               586  handleAlgebraicExpression.processGeq
             5AA               5AA  handleAlgebraicExpression.processLeq
             5CE               5CE  handleAlgebraicExpression.processEq
             5EF               5EF  handleAlgebraicExpression.processNeq
             613               613  handleAlgebraicExpression.handleSecondLevelSkip
             616               616  handleAlgebraicExpression.handleSecondLevel
             61B               61B  handleAlgebraicExpression.parseAdditiveOperators
             62F               62F  handleAlgebraicExpression.processAdd
             635               635  handleAlgebraicExpression.processMinus
             640               640  handleAlgebraicExpression.handleFirstLevelSkip
             643               643  handleAlgebraicExpression.handleFirstLevel
             648               648  handleAlgebraicExpression.parseProductOperators
             685               685  handleAlgebraicExpression.processMult
             691               691  handleAlgebraicExpression.processDiv
             6A9               6A9  handleAlgebraicExpression.divByZero
             6C7               6C7  handleAlgebraicExpression.exponentFound
             6D7               6D7  handleAlgebraicExpression.imulLoop
             6E7               6E7  handleAlgebraicExpression.handleZerothLevelSkip
             6EA               6EA  handleAlgebraicExpression.handleZerothLevel
             703               703  handleAlgebraicExpression.varConstCheck
             714               714  handleAlgebraicExpression.varOrRNDFound
             742               742  handleAlgebraicExpression.exit
             743               743  handleAlgebraicExpression.varFound
             75A               75A  handleAlgebraicExpression.closeBracket
             762               762  handleAlgebraicExpression.error
             76E               76E  handleAlgebraicExpression.stack
             77A               77A  getNumericVariable
             79A               79A  getNumericVariable.exit
             79E               79E  getNumericVariable.noVar
             7A2               7A2  getNumericVariable.stringFoundError
             7AE               7AE  setNumericVariable
             7CE               7CE  setNumericVariable.exit
             7D2               7D2  setNumericVariable.makeEditInteger
             7D9               7D9  setNumericVariable.stringFoundError
             7E5               7E5  setStringVariable
             7F2               7F2  findOtherExpressionsOnLine
             7FB               7FB  findOtherExpressionsOnLine.exit
             7FC               7FC  funTbl
             885               885  whileStr
             89D               89D  thenStr
             8A5               8A5  elseStr
             940               940  badCmd
             94C               94C  endProg
             951               951  tron
             959               959  troff
             961               961  notWrapper
             969               969  memRead
             969               969  memWrite
             969               969  byteRead
             969               969  byteWrite
             96A               96A  remark
             973               973  oldSchoolAssignemnt
             978               978  variableAssignment
             9BB               9BB  variableAssignment.stringAssignment
             9DE               9DE  variableAssignment.syntaxError
             9EA               9EA  variableAssignment.typError
             9F6               9F6  newProgram
             A5A               A5A  listProgram
             A61               A61  listProgram.printLines
             A95               A95  listProgram.exit
             A96               A96  runProgram
             ABB               ABB  runProgram.endProgramPoint
             AC7               AC7  printStatement
             AC7               AC7  printStatement.printStart
             ADD               ADD  printStatement.printExpr
             AE0               AE0  printStatement.printExpr1
             AF1               AF1  printStatement.printStringVar
             B1E               B1E  printStatement.stringPrint
             B36               B36  printStatement.openSpeechMark
             B39               B39  printStatement.psvexitColon
             B3C               B3C  printStatement.psvexit
             B49               B49  printStatement.closespeechmarks
             B5C               B5C  printStatement.continue
             B66               B66  getInput
             B70               B70  getInput.customPrompt
             B73               B73  getInput.cp0
             B7C               B7C  getInput.error
             B88               B88  getInput.printCustomPrompt
             B8B               B8B  getInput.pcp0
             B97               B97  getInput.stopPrompt
             BA5               BA5  getInput.defaultPrompt
             BAF               BAF  getInput.noDefaultPrompt
             BEA               BEA  getInput.handleNumeric
             BF9               BF9  getInput.handleString
             C04               C04  getInput.commonExit
             C05               C05  returnToDOS
             C07               C07  cls
             C0C               C0C  dbgr
             C1B               C1B  dbgr.farReturn
             C44               C44  retScan
             C83               C83  retScan.initialSearch
             C98               C98  retScan.notCandidate
             C9D               C9D  retScan.gotoNextLine
             CB0               CB0  retScan.wordFound
             CCB               CCB  retScan.csumLoop
             CD9               CD9  retScan.exit
             CDB               CDB  retScan.noRet
             CF1               CF1  retScan.error
             D07               D07  wendScan
             D46               D46  wendScan.initialSearch
             D58               D58  wendScan.gotoNextLine
             D6B               D6B  wendScan.wordFound
             D9D               D9D  wendScan.csumLoop
             DAB               DAB  wendScan.exit
             DAD               DAD  wendScan.noWend
             DC3               DC3  wendScan.error
             DD9               DD9  nextScan
             E18               E18  nextScan.initialSearch
             E2A               E2A  nextScan.gotoNextLine
             E3D               E3D  nextScan.wordFound
             E6F               E6F  nextScan.csumLoop
             E7D               E7D  nextScan.exit
             E7F               E7F  nextScan.noNext
             E95               E95  nextScan.error
             EAB               EAB  goto
             EC0               EC0  gosub
             EF3               EF3  gosub.macroNotOverflow
             F04               F04  gosub.error
             F09               F09  return
             F23               F23  return.checksumTest
             F4B               F4B  return.noReturn
             F57               F57  forLoop
             F8E               F8E  forLoop.macroNotOverflow
             FA3               FA3  forLoop.flScanTo
             FBE               FBE  forLoop.flToFound
             FEE               FEE  forLoop.flVariable
            1022              1022  forLoop.exit
            102A              102A  forLoop.defaultStep
            1034              1034  forLoop.dontRunFor
            104E              104E  forLoop.unknownError
            1057              1057  forLoop.syntaxError
            105E              105E  forLoop.critError
            1063              1063  next
            107D              107D  next.checksumTest
            10A9              10A9  next.exit
            10B1              10B1  next.noMoreLooping
            10CB              10CB  next.noForNext
            10D7              10D7  while
            110A              110A  while.macroNotOverflow
            112B              112B  while.exit
            1133              1133  while.conditionFalse
            1149              1149  while.critError
            114E              114E  wend
            116C              116C  wend.checksumTest
            1196              1196  wend.whileScan
            11A7              11A7  wend.scanning
            11C8              11C8  wend.exit
            11D0              11D0  wend.conditionFalse
            11E6              11E6  wend.error
            11F2              11F2  wend.noWhile
            11FE              11FE  handleIf
            122B              122B  handleIf.candidatethen
            1232              1232  handleIf.else
            125C              125C  handleIf.hi0
            1289              1289  handleIf.noElse
            128A              128A  handleIf.error
            1296              1296  decimalToHex
            129B              129B  decimalToHex.processDigits
            12B7              12B7  decimalToHex.exit
            12BE              12BE  printdecimalword
            12E3              12E3  printdecimalword.noCompliment
            1300              1300  printdecimalword.pdw0
            1310              1310  printdecimalword.pdw1
            1325              1325  printdecimalword.printString
            1334              1334  allocateBlock
            1335              1335  allocateBlock.ab0
            1366              1366  allocateBlock.exit
            1368              1368  allocateBlock.memoryFull
            1374              1374  allocateBlock.firstAllocation
            1394              1394  findVariable
            13A9              13A9  findVariable.search
            13B5              13B5  findVariable.invalid
            13C4              13C4  findVariable.varFound
            13D3              13D3  findVariable.datFound
            13E5              13E5  findVariable.varNotFound
            13EF              13EF  findVariable.exit
            13F5              13F5  findFirstLine
            1404              1404  searchForProgramLine
            1414              1414  searchForProgramLine.search
            1427              1427  searchForProgramLine.lineFound
            1428              1428  insertProgramLine
            1448              1448  insertProgramLine.walk
            145C              145C  insertProgramLine.candidate
            146B              146B  insertProgramLine.sort
            147E              147E  insertProgramLine.skipLink
            148C              148C  insertProgramLine.first
            149E              149E  insertProgramLine.exit
            14A4              14A4  makeEditInteger
            14B7              14B7  makeEditInteger.newVar
            14E3              14E3  makeEditInteger.error
            14EF              14EF  makeEditString
            1529              1529  makeEditString.strcopy
            153D              153D  makeEditString.error
            1549              1549  terminatedstrcpy
            154A              154A  terminatedstrcpy.copy
            155A              155A  terminatedstrcpy.exit
            155C              155C  strcpy
            1565              1565  strlen
            1574              1574  memoryDetection
            1595              1595  prompt
            159A              159A  mainmsg
            15B1              15B1  cpyrt
            15ED              15ED  bytemsg
            15FB              15FB  crlf
            15FE              15FE  errmsg
            1606              1606  numbers
            1610              1610  varChrs
            1636              1636  noMem
            1646              1646  syntax
            1655              1655  typeError
            1665              1665  lineNoXist
            167D              167D  breakmsg
            1687              1687  stkOvflw
            1698              1698  noWend
            16AD              16AD  noWhile
            16C2              16C2  noFor
            16D5              16D5  noNext
            16E8              16E8  noReturn
            16FF              16FF  uknowner
            1713              1713  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            1726              2630  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
            1730              1730  oflowbuff
            1780              1780  stack
            24C0              24C0  stacktop
            24C8              24C8  inString
            25C8              25C8  digitString
            25F8              25F8  minMemAddr
            2600              2600  maxMemAddr
            2608              2608  strLen
            2609              2609  stateByte
            260A              260A  mcbChain
            2612              2612  lastBlock
            261A              261A  firstLinPtr
            2622              2622  firstLinNum
            2624              2624  currentLine
            2626              2626  bssLen

