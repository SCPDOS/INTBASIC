
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1725  00001725  progbits  .text
            2630              1725              1725  00000000  progbits  programArea
            1730              1730              2626  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1725
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1725
align:                    1
follows:   not defined
vstart:                2630
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                 1730
align:     not defined
follows:   not defined
vstart:                1730
valign:                  10
vfollows:  .text

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000100  maxLineLen
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              52                52  mainLoop
              83                83  mainLoop.ml0
              A5                A5  mainLoop.saveLine
              D3                D3  mainLoop.commonProc
              ED                ED  mainLoop.lineDoesntExist
              F4                F4  criticalError
             105               105  ctrlBreakHandler
             10E               10E  setHandler
             113               113  getLineInput
             132               132  getLineInput.getChar
             156               156  getLineInput.gspchMk
             15A               15A  getLineInput.glibspace
             183               183  getLineInput.gliCheckCase
             192               192  getLineInput.gStore
             19B               19B  getLineInput.gliExtendedChar
             19D               19D  getLineInput.gliExit
             1AD               1AD  getLineInput.gliFull
             1B9               1B9  ucChar
             1C5               1C5  ttyOutChar
             1D1               1D1  ttyOutString
             1F3               1F3  ttyIn
             1FB               1FB  ttyClear
             20E               20E  ttyClear.s
             213               213  keywordParser
             224               224  keywordParser.functionFinderLoop
             248               248  keywordParser.functionFound
             260               260  keywordParser.exit
             261               261  keywordParser.exitEmpty
             26C               26C  keywordParser.notLetVarAssignment
             275               275  runLine
             282               282  runLine.stringPortionProcess
             2C7               2C7  runLine.gotoNextLine
             2F1               2F1  runLine.gotoNextLineCommon
             2FD               2FD  runLine.exit
             2FE               2FE  runLine.ctrlFlowHandler
             326               326  runLine.badLineNumber
             332               332  runLine.tron
             35E               35E  runLine.break
             38E               38E  spaceSkip
             398               398  spaceSkip.exit
             399               399  getVarNameLength
             3A7               3A7  getVarNameLength.search
             3BE               3BE  getVarNameLength.exit
             3C6               3C6  getVarType
             3DD               3DD  getVarType.exit
             3E1               3E1  handleAlgebraicExpression
             3F9               3F9  handleAlgebraicExpression.handleFourthLevel
             3FE               3FE  handleAlgebraicExpression.parseLogicals
             459               459  handleAlgebraicExpression.rightShift
             46A               46A  handleAlgebraicExpression.leftShift
             47B               47B  handleAlgebraicExpression.rightRoll
             48C               48C  handleAlgebraicExpression.leftRoll
             49D               49D  handleAlgebraicExpression.imp
             4AF               4AF  handleAlgebraicExpression.not
             4BC               4BC  handleAlgebraicExpression.and
             4CB               4CB  handleAlgebraicExpression.or
             4DD               4DD  handleAlgebraicExpression.xor
             4EC               4EC  handleAlgebraicExpression.eqv
             4FE               4FE  handleAlgebraicExpression.handleThirdLevelSkip
             505               505  handleAlgebraicExpression.handleThirdLevel
             50A               50A  handleAlgebraicExpression.parseRelationals
             537               537  handleAlgebraicExpression.processGreater
             55E               55E  handleAlgebraicExpression.processLess
             585               585  handleAlgebraicExpression.processGeq
             5A9               5A9  handleAlgebraicExpression.processLeq
             5CD               5CD  handleAlgebraicExpression.processEq
             5EE               5EE  handleAlgebraicExpression.processNeq
             612               612  handleAlgebraicExpression.handleSecondLevelSkip
             615               615  handleAlgebraicExpression.handleSecondLevel
             61A               61A  handleAlgebraicExpression.parseAdditiveOperators
             62E               62E  handleAlgebraicExpression.processAdd
             634               634  handleAlgebraicExpression.processMinus
             63F               63F  handleAlgebraicExpression.handleFirstLevelSkip
             642               642  handleAlgebraicExpression.handleFirstLevel
             647               647  handleAlgebraicExpression.parseProductOperators
             684               684  handleAlgebraicExpression.processMult
             690               690  handleAlgebraicExpression.processDiv
             6A8               6A8  handleAlgebraicExpression.divByZero
             6C6               6C6  handleAlgebraicExpression.exponentFound
             6D6               6D6  handleAlgebraicExpression.imulLoop
             6E6               6E6  handleAlgebraicExpression.handleZerothLevelSkip
             6E9               6E9  handleAlgebraicExpression.handleZerothLevel
             702               702  handleAlgebraicExpression.varConstCheck
             713               713  handleAlgebraicExpression.varOrRNDFound
             741               741  handleAlgebraicExpression.exit
             742               742  handleAlgebraicExpression.varFound
             759               759  handleAlgebraicExpression.closeBracket
             761               761  handleAlgebraicExpression.error
             76D               76D  handleAlgebraicExpression.stack
             779               779  getNumericVariable
             799               799  getNumericVariable.exit
             79D               79D  getNumericVariable.noVar
             7A1               7A1  getNumericVariable.stringFoundError
             7AD               7AD  setNumericVariable
             7CD               7CD  setNumericVariable.exit
             7D1               7D1  setNumericVariable.makeEditInteger
             7D8               7D8  setNumericVariable.stringFoundError
             7E4               7E4  setStringVariable
             7F1               7F1  findOtherExpressionsOnLine
             7FA               7FA  findOtherExpressionsOnLine.exit
             7FB               7FB  funTbl
             884               884  whileStr
             89C               89C  thenStr
             8A4               8A4  elseStr
             93F               93F  badCmd
             94B               94B  endProg
             950               950  tron
             958               958  troff
             960               960  notWrapper
             968               968  memRead
             968               968  memWrite
             968               968  byteRead
             968               968  byteWrite
             969               969  remark
             972               972  oldSchoolAssignemnt
             977               977  variableAssignment
             9BA               9BA  variableAssignment.stringAssignment
             9DD               9DD  variableAssignment.syntaxError
             9E9               9E9  variableAssignment.typError
             9F5               9F5  newProgram
             A59               A59  listProgram
             A60               A60  listProgram.printLines
             A94               A94  listProgram.exit
             A95               A95  runProgram
             ABA               ABA  runProgram.endProgramPoint
             AC6               AC6  printStatement
             AC6               AC6  printStatement.printStart
             ADC               ADC  printStatement.printExpr
             ADF               ADF  printStatement.printExpr1
             AF0               AF0  printStatement.printStringVar
             B1D               B1D  printStatement.stringPrint
             B35               B35  printStatement.openSpeechMark
             B38               B38  printStatement.psvexitColon
             B3B               B3B  printStatement.psvexit
             B48               B48  printStatement.closespeechmarks
             B5B               B5B  printStatement.continue
             B65               B65  getInput
             B6F               B6F  getInput.customPrompt
             B72               B72  getInput.cp0
             B7B               B7B  getInput.error
             B87               B87  getInput.printCustomPrompt
             B8A               B8A  getInput.pcp0
             B96               B96  getInput.stopPrompt
             BA4               BA4  getInput.defaultPrompt
             BAE               BAE  getInput.noDefaultPrompt
             BE9               BE9  getInput.handleNumeric
             BF8               BF8  getInput.handleString
             C03               C03  getInput.commonExit
             C04               C04  returnToDOS
             C06               C06  cls
             C0B               C0B  dbgr
             C1A               C1A  dbgr.farReturn
             C43               C43  retScan
             C82               C82  retScan.initialSearch
             C97               C97  retScan.notCandidate
             C9C               C9C  retScan.gotoNextLine
             CAF               CAF  retScan.wordFound
             CCA               CCA  retScan.csumLoop
             CD8               CD8  retScan.exit
             CDA               CDA  retScan.noRet
             CF0               CF0  retScan.error
             D06               D06  wendScan
             D45               D45  wendScan.initialSearch
             D57               D57  wendScan.gotoNextLine
             D6A               D6A  wendScan.wordFound
             D9C               D9C  wendScan.csumLoop
             DAA               DAA  wendScan.exit
             DAC               DAC  wendScan.noWend
             DC2               DC2  wendScan.error
             DD8               DD8  nextScan
             E17               E17  nextScan.initialSearch
             E29               E29  nextScan.gotoNextLine
             E3C               E3C  nextScan.wordFound
             E6E               E6E  nextScan.csumLoop
             E7C               E7C  nextScan.exit
             E7E               E7E  nextScan.noNext
             E94               E94  nextScan.error
             EAA               EAA  goto
             EBF               EBF  gosub
             EF2               EF2  gosub.macroNotOverflow
             F03               F03  gosub.error
             F08               F08  return
             F22               F22  return.checksumTest
             F4A               F4A  return.noReturn
             F56               F56  forLoop
             F8D               F8D  forLoop.macroNotOverflow
             FA2               FA2  forLoop.flScanTo
             FBD               FBD  forLoop.flToFound
             FED               FED  forLoop.flVariable
            1021              1021  forLoop.exit
            1029              1029  forLoop.defaultStep
            1033              1033  forLoop.dontRunFor
            104D              104D  forLoop.unknownError
            1056              1056  forLoop.syntaxError
            105D              105D  forLoop.critError
            1062              1062  next
            107C              107C  next.checksumTest
            10A8              10A8  next.exit
            10B0              10B0  next.noMoreLooping
            10CA              10CA  next.noForNext
            10D6              10D6  while
            1109              1109  while.macroNotOverflow
            112A              112A  while.exit
            1132              1132  while.conditionFalse
            1148              1148  while.critError
            114D              114D  wend
            116B              116B  wend.checksumTest
            1195              1195  wend.whileScan
            11A6              11A6  wend.scanning
            11C7              11C7  wend.exit
            11CF              11CF  wend.conditionFalse
            11E5              11E5  wend.error
            11F1              11F1  wend.noWhile
            11FD              11FD  handleIf
            122A              122A  handleIf.candidatethen
            1231              1231  handleIf.else
            125B              125B  handleIf.hi0
            1288              1288  handleIf.noElse
            1289              1289  handleIf.error
            1295              1295  decimalToHex
            129A              129A  decimalToHex.processDigits
            12B6              12B6  decimalToHex.exit
            12BD              12BD  printdecimalword
            12E2              12E2  printdecimalword.noCompliment
            12FF              12FF  printdecimalword.pdw0
            130F              130F  printdecimalword.pdw1
            1324              1324  printdecimalword.printString
            1333              1333  allocateBlock
            1334              1334  allocateBlock.ab0
            1365              1365  allocateBlock.exit
            1367              1367  allocateBlock.memoryFull
            1373              1373  allocateBlock.firstAllocation
            1393              1393  findVariable
            13A8              13A8  findVariable.search
            13B4              13B4  findVariable.invalid
            13C3              13C3  findVariable.varFound
            13D2              13D2  findVariable.datFound
            13E4              13E4  findVariable.varNotFound
            13EE              13EE  findVariable.exit
            13F4              13F4  findFirstLine
            1403              1403  searchForProgramLine
            1413              1413  searchForProgramLine.search
            1426              1426  searchForProgramLine.lineFound
            1427              1427  insertProgramLine
            1447              1447  insertProgramLine.walk
            145B              145B  insertProgramLine.candidate
            146A              146A  insertProgramLine.sort
            147D              147D  insertProgramLine.skipLink
            148B              148B  insertProgramLine.first
            149D              149D  insertProgramLine.exit
            14A3              14A3  makeEditInteger
            14B6              14B6  makeEditInteger.newVar
            14E2              14E2  makeEditInteger.error
            14EE              14EE  makeEditString
            1528              1528  makeEditString.strcopy
            153C              153C  makeEditString.error
            1548              1548  terminatedstrcpy
            1549              1549  terminatedstrcpy.copy
            1559              1559  terminatedstrcpy.exit
            155B              155B  strcpy
            1564              1564  strlen
            1573              1573  memoryDetection
            1594              1594  prompt
            1599              1599  mainmsg
            15B0              15B0  cpyrt
            15EC              15EC  bytemsg
            15FA              15FA  crlf
            15FD              15FD  errmsg
            1605              1605  numbers
            160F              160F  varChrs
            1635              1635  noMem
            1645              1645  syntax
            1654              1654  typeError
            1664              1664  lineNoXist
            167C              167C  breakmsg
            1686              1686  stkOvflw
            1697              1697  noWend
            16AC              16AC  noWhile
            16C1              16C1  noFor
            16D4              16D4  noNext
            16E7              16E7  noReturn
            16FE              16FE  uknowner
            1712              1712  divZer

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
            1730              1730  oflowbuff
            1780              1780  stack
            24C0              24C0  stacktop
            24C8              24C8  inString
            25C8              25C8  digitString
            25F8              25F8  minMemAddr
            2600              2600  maxMemAddr
            2608              2608  strLen
            2609              2609  stateByte
            260A              260A  mcbChain
            2612              2612  lastBlock
            261A              261A  firstLinPtr
            2622              2622  firstLinNum
            2624              2624  currentLine
            2626              2626  bssLen

