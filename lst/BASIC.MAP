
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              172C  0000172C  progbits  .text
            2630              172C              172C  00000000  progbits  programArea
            1730              1730              2626  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                172C
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 172C
align:                    1
follows:   not defined
vstart:                2630
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                 1730
align:     not defined
follows:   not defined
vstart:                1730
valign:                  10
vfollows:  .text

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              52                52  mainLoop
              83                83  mainLoop.ml0
              A5                A5  mainLoop.saveLine
              D3                D3  mainLoop.commonProc
              ED                ED  mainLoop.lineDoesntExist
              F4                F4  criticalError
             105               105  ctrlBreakHandler
             10E               10E  setHandler
             113               113  getLineInput
             132               132  getLineInput.getChar
             156               156  getLineInput.gspchMk
             15A               15A  getLineInput.glibspace
             183               183  getLineInput.gliCheckCase
             192               192  getLineInput.gStore
             19B               19B  getLineInput.gliExtendedChar
             19D               19D  getLineInput.gliExit
             1AD               1AD  getLineInput.gliFull
             1B9               1B9  ucChar
             1CB               1CB  ttyOutChar
             1D7               1D7  ttyOutString
             1F9               1F9  ttyIn
             201               201  ttyClear
             21A               21A  keywordParser
             22B               22B  keywordParser.functionFinderLoop
             24F               24F  keywordParser.functionFound
             267               267  keywordParser.exit
             268               268  keywordParser.exitEmpty
             273               273  keywordParser.notLetVarAssignment
             27C               27C  runLine
             289               289  runLine.stringPortionProcess
             2CE               2CE  runLine.gotoNextLine
             2F8               2F8  runLine.gotoNextLineCommon
             304               304  runLine.exit
             305               305  runLine.ctrlFlowHandler
             32D               32D  runLine.badLineNumber
             339               339  runLine.tron
             365               365  runLine.break
             395               395  spaceSkip
             39F               39F  spaceSkip.exit
             3A0               3A0  getVarNameLength
             3AE               3AE  getVarNameLength.search
             3C5               3C5  getVarNameLength.exit
             3CD               3CD  getVarType
             3E4               3E4  getVarType.exit
             3E8               3E8  handleAlgebraicExpression
             400               400  handleAlgebraicExpression.handleFourthLevel
             405               405  handleAlgebraicExpression.parseLogicals
             460               460  handleAlgebraicExpression.rightShift
             471               471  handleAlgebraicExpression.leftShift
             482               482  handleAlgebraicExpression.rightRoll
             493               493  handleAlgebraicExpression.leftRoll
             4A4               4A4  handleAlgebraicExpression.imp
             4B6               4B6  handleAlgebraicExpression.not
             4C3               4C3  handleAlgebraicExpression.and
             4D2               4D2  handleAlgebraicExpression.or
             4E4               4E4  handleAlgebraicExpression.xor
             4F3               4F3  handleAlgebraicExpression.eqv
             505               505  handleAlgebraicExpression.handleThirdLevelSkip
             50C               50C  handleAlgebraicExpression.handleThirdLevel
             511               511  handleAlgebraicExpression.parseRelationals
             53E               53E  handleAlgebraicExpression.processGreater
             565               565  handleAlgebraicExpression.processLess
             58C               58C  handleAlgebraicExpression.processGeq
             5B0               5B0  handleAlgebraicExpression.processLeq
             5D4               5D4  handleAlgebraicExpression.processEq
             5F5               5F5  handleAlgebraicExpression.processNeq
             619               619  handleAlgebraicExpression.handleSecondLevelSkip
             61C               61C  handleAlgebraicExpression.handleSecondLevel
             621               621  handleAlgebraicExpression.parseAdditiveOperators
             635               635  handleAlgebraicExpression.processAdd
             63B               63B  handleAlgebraicExpression.processMinus
             646               646  handleAlgebraicExpression.handleFirstLevelSkip
             649               649  handleAlgebraicExpression.handleFirstLevel
             64E               64E  handleAlgebraicExpression.parseProductOperators
             68B               68B  handleAlgebraicExpression.processMult
             697               697  handleAlgebraicExpression.processDiv
             6AF               6AF  handleAlgebraicExpression.divByZero
             6CD               6CD  handleAlgebraicExpression.exponentFound
             6DD               6DD  handleAlgebraicExpression.imulLoop
             6ED               6ED  handleAlgebraicExpression.handleZerothLevelSkip
             6F0               6F0  handleAlgebraicExpression.handleZerothLevel
             709               709  handleAlgebraicExpression.varConstCheck
             71A               71A  handleAlgebraicExpression.varOrRNDFound
             748               748  handleAlgebraicExpression.exit
             749               749  handleAlgebraicExpression.varFound
             760               760  handleAlgebraicExpression.closeBracket
             768               768  handleAlgebraicExpression.error
             774               774  handleAlgebraicExpression.stack
             780               780  getNumericVariable
             7A0               7A0  getNumericVariable.exit
             7A4               7A4  getNumericVariable.noVar
             7A8               7A8  getNumericVariable.stringFoundError
             7B4               7B4  setNumericVariable
             7D4               7D4  setNumericVariable.exit
             7D8               7D8  setNumericVariable.makeEditInteger
             7DF               7DF  setNumericVariable.stringFoundError
             7EB               7EB  setStringVariable
             7F8               7F8  findOtherExpressionsOnLine
             801               801  findOtherExpressionsOnLine.exit
             802               802  funTbl
             88B               88B  whileStr
             8A3               8A3  thenStr
             8AB               8AB  elseStr
             946               946  badCmd
             952               952  endProg
             957               957  tron
             95F               95F  troff
             967               967  notWrapper
             96F               96F  memRead
             96F               96F  memWrite
             96F               96F  byteRead
             96F               96F  byteWrite
             970               970  remark
             979               979  oldSchoolAssignemnt
             97E               97E  variableAssignment
             9C1               9C1  variableAssignment.stringAssignment
             9E4               9E4  variableAssignment.syntaxError
             9F0               9F0  variableAssignment.typError
             9FC               9FC  newProgram
             A60               A60  listProgram
             A67               A67  listProgram.printLines
             A9B               A9B  listProgram.exit
             A9C               A9C  runProgram
             AC1               AC1  runProgram.endProgramPoint
             ACD               ACD  printStatement
             ACD               ACD  printStatement.printStart
             AE3               AE3  printStatement.printExpr
             AE6               AE6  printStatement.printExpr1
             AF7               AF7  printStatement.printStringVar
             B24               B24  printStatement.stringPrint
             B3C               B3C  printStatement.openSpeechMark
             B3F               B3F  printStatement.psvexitColon
             B42               B42  printStatement.psvexit
             B4F               B4F  printStatement.closespeechmarks
             B62               B62  printStatement.continue
             B6C               B6C  getInput
             B76               B76  getInput.customPrompt
             B79               B79  getInput.cp0
             B82               B82  getInput.error
             B8E               B8E  getInput.printCustomPrompt
             B91               B91  getInput.pcp0
             B9D               B9D  getInput.stopPrompt
             BAB               BAB  getInput.defaultPrompt
             BB5               BB5  getInput.noDefaultPrompt
             BF0               BF0  getInput.handleNumeric
             BFF               BFF  getInput.handleString
             C0A               C0A  getInput.commonExit
             C0B               C0B  returnToDOS
             C0D               C0D  cls
             C12               C12  dbgr
             C21               C21  dbgr.farReturn
             C4A               C4A  retScan
             C89               C89  retScan.initialSearch
             C9E               C9E  retScan.notCandidate
             CA3               CA3  retScan.gotoNextLine
             CB6               CB6  retScan.wordFound
             CD1               CD1  retScan.csumLoop
             CDF               CDF  retScan.exit
             CE1               CE1  retScan.noRet
             CF7               CF7  retScan.error
             D0D               D0D  wendScan
             D4C               D4C  wendScan.initialSearch
             D5E               D5E  wendScan.gotoNextLine
             D71               D71  wendScan.wordFound
             DA3               DA3  wendScan.csumLoop
             DB1               DB1  wendScan.exit
             DB3               DB3  wendScan.noWend
             DC9               DC9  wendScan.error
             DDF               DDF  nextScan
             E1E               E1E  nextScan.initialSearch
             E30               E30  nextScan.gotoNextLine
             E43               E43  nextScan.wordFound
             E75               E75  nextScan.csumLoop
             E83               E83  nextScan.exit
             E85               E85  nextScan.noNext
             E9B               E9B  nextScan.error
             EB1               EB1  goto
             EC6               EC6  gosub
             EF9               EF9  gosub.macroNotOverflow
             F0A               F0A  gosub.error
             F0F               F0F  return
             F29               F29  return.checksumTest
             F51               F51  return.noReturn
             F5D               F5D  forLoop
             F94               F94  forLoop.macroNotOverflow
             FA9               FA9  forLoop.flScanTo
             FC4               FC4  forLoop.flToFound
             FF4               FF4  forLoop.flVariable
            1028              1028  forLoop.exit
            1030              1030  forLoop.defaultStep
            103A              103A  forLoop.dontRunFor
            1054              1054  forLoop.unknownError
            105D              105D  forLoop.syntaxError
            1064              1064  forLoop.critError
            1069              1069  next
            1083              1083  next.checksumTest
            10AF              10AF  next.exit
            10B7              10B7  next.noMoreLooping
            10D1              10D1  next.noForNext
            10DD              10DD  while
            1110              1110  while.macroNotOverflow
            1131              1131  while.exit
            1139              1139  while.conditionFalse
            114F              114F  while.critError
            1154              1154  wend
            1172              1172  wend.checksumTest
            119C              119C  wend.whileScan
            11AD              11AD  wend.scanning
            11CE              11CE  wend.exit
            11D6              11D6  wend.conditionFalse
            11EC              11EC  wend.error
            11F8              11F8  wend.noWhile
            1204              1204  handleIf
            1231              1231  handleIf.candidatethen
            1238              1238  handleIf.else
            1262              1262  handleIf.hi0
            128F              128F  handleIf.noElse
            1290              1290  handleIf.error
            129C              129C  decimalToHex
            12A1              12A1  decimalToHex.processDigits
            12BD              12BD  decimalToHex.exit
            12C4              12C4  printdecimalword
            12E9              12E9  printdecimalword.noCompliment
            1306              1306  printdecimalword.pdw0
            1316              1316  printdecimalword.pdw1
            132B              132B  printdecimalword.printString
            133A              133A  allocateBlock
            133B              133B  allocateBlock.ab0
            136C              136C  allocateBlock.exit
            136E              136E  allocateBlock.memoryFull
            137A              137A  allocateBlock.firstAllocation
            139A              139A  findVariable
            13AF              13AF  findVariable.search
            13BB              13BB  findVariable.invalid
            13CA              13CA  findVariable.varFound
            13D9              13D9  findVariable.datFound
            13EB              13EB  findVariable.varNotFound
            13F5              13F5  findVariable.exit
            13FB              13FB  findFirstLine
            140A              140A  searchForProgramLine
            141A              141A  searchForProgramLine.search
            142D              142D  searchForProgramLine.lineFound
            142E              142E  insertProgramLine
            144E              144E  insertProgramLine.walk
            1462              1462  insertProgramLine.candidate
            1471              1471  insertProgramLine.sort
            1484              1484  insertProgramLine.skipLink
            1492              1492  insertProgramLine.first
            14A4              14A4  insertProgramLine.exit
            14AA              14AA  makeEditInteger
            14BD              14BD  makeEditInteger.newVar
            14E9              14E9  makeEditInteger.error
            14F5              14F5  makeEditString
            152F              152F  makeEditString.strcopy
            1543              1543  makeEditString.error
            154F              154F  terminatedstrcpy
            1550              1550  terminatedstrcpy.copy
            1560              1560  terminatedstrcpy.exit
            1562              1562  strcpy
            156B              156B  strlen
            157A              157A  memoryDetection
            159B              159B  prompt
            15A0              15A0  mainmsg
            15B7              15B7  cpyrt
            15F3              15F3  bytemsg
            1601              1601  crlf
            1604              1604  errmsg
            160C              160C  numbers
            1616              1616  varChrs
            163C              163C  noMem
            164C              164C  syntax
            165B              165B  typeError
            166B              166B  lineNoXist
            1683              1683  breakmsg
            168D              168D  stkOvflw
            169E              169E  noWend
            16B3              16B3  noWhile
            16C8              16C8  noFor
            16DB              16DB  noNext
            16EE              16EE  noReturn
            1705              1705  uknowner
            1719              1719  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            172C              2630  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
            1730              1730  oflowbuff
            1780              1780  stack
            24C0              24C0  stacktop
            24C8              24C8  inString
            25C8              25C8  digitString
            25F8              25F8  minMemAddr
            2600              2600  maxMemAddr
            2608              2608  strLen
            2609              2609  stateByte
            260A              260A  mcbChain
            2612              2612  lastBlock
            261A              261A  firstLinPtr
            2622              2622  firstLinNum
            2624              2624  currentLine
            2626              2626  bssLen

