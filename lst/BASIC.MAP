
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1731  00001731  progbits  .text
            2630              1731              1731  00000000  progbits  programArea
            1731              1731              2627  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1731
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1731
align:                    1
follows:   not defined
vstart:                2630
valign:                  10
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                 1731
align:     not defined
follows:   not defined
vstart:                1731
valign:                   1
vfollows:  .text

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
0000000D  CR
0000000A  LF
00000008  BSP
00000020  SPC
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              52                52  mainLoop
              83                83  mainLoop.ml0
              A5                A5  mainLoop.saveLine
              D3                D3  mainLoop.commonProc
              ED                ED  mainLoop.lineDoesntExist
              F4                F4  criticalError
             105               105  ctrlBreakHandler
             10E               10E  setHandler
             113               113  getLineInput
             132               132  getLineInput.getChar
             156               156  getLineInput.gspchMk
             15A               15A  getLineInput.glibspace
             183               183  getLineInput.gliCheckCase
             197               197  getLineInput.gStore
             1A0               1A0  getLineInput.gliExtendedChar
             1A2               1A2  getLineInput.gliExit
             1B2               1B2  getLineInput.gliFull
             1BE               1BE  ucChar
             1D0               1D0  ttyOutChar
             1DC               1DC  ttyOutString
             1FE               1FE  ttyIn
             206               206  ttyClear
             21F               21F  keywordParser
             230               230  keywordParser.functionFinderLoop
             254               254  keywordParser.functionFound
             26C               26C  keywordParser.exit
             26D               26D  keywordParser.exitEmpty
             278               278  keywordParser.notLetVarAssignment
             281               281  runLine
             28E               28E  runLine.stringPortionProcess
             2D3               2D3  runLine.gotoNextLine
             2FD               2FD  runLine.gotoNextLineCommon
             309               309  runLine.exit
             30A               30A  runLine.ctrlFlowHandler
             332               332  runLine.badLineNumber
             33E               33E  runLine.tron
             36A               36A  runLine.break
             39A               39A  spaceSkip
             3A4               3A4  spaceSkip.exit
             3A5               3A5  getVarNameLength
             3B3               3B3  getVarNameLength.search
             3CA               3CA  getVarNameLength.exit
             3D2               3D2  getVarType
             3E9               3E9  getVarType.exit
             3ED               3ED  handleAlgebraicExpression
             405               405  handleAlgebraicExpression.handleFourthLevel
             40A               40A  handleAlgebraicExpression.parseLogicals
             465               465  handleAlgebraicExpression.rightShift
             476               476  handleAlgebraicExpression.leftShift
             487               487  handleAlgebraicExpression.rightRoll
             498               498  handleAlgebraicExpression.leftRoll
             4A9               4A9  handleAlgebraicExpression.imp
             4BB               4BB  handleAlgebraicExpression.not
             4C8               4C8  handleAlgebraicExpression.and
             4D7               4D7  handleAlgebraicExpression.or
             4E9               4E9  handleAlgebraicExpression.xor
             4F8               4F8  handleAlgebraicExpression.eqv
             50A               50A  handleAlgebraicExpression.handleThirdLevelSkip
             511               511  handleAlgebraicExpression.handleThirdLevel
             516               516  handleAlgebraicExpression.parseRelationals
             543               543  handleAlgebraicExpression.processGreater
             56A               56A  handleAlgebraicExpression.processLess
             591               591  handleAlgebraicExpression.processGeq
             5B5               5B5  handleAlgebraicExpression.processLeq
             5D9               5D9  handleAlgebraicExpression.processEq
             5FA               5FA  handleAlgebraicExpression.processNeq
             61E               61E  handleAlgebraicExpression.handleSecondLevelSkip
             621               621  handleAlgebraicExpression.handleSecondLevel
             626               626  handleAlgebraicExpression.parseAdditiveOperators
             63A               63A  handleAlgebraicExpression.processAdd
             640               640  handleAlgebraicExpression.processMinus
             64B               64B  handleAlgebraicExpression.handleFirstLevelSkip
             64E               64E  handleAlgebraicExpression.handleFirstLevel
             653               653  handleAlgebraicExpression.parseProductOperators
             690               690  handleAlgebraicExpression.processMult
             69C               69C  handleAlgebraicExpression.processDiv
             6B4               6B4  handleAlgebraicExpression.divByZero
             6D2               6D2  handleAlgebraicExpression.exponentFound
             6E2               6E2  handleAlgebraicExpression.imulLoop
             6F2               6F2  handleAlgebraicExpression.handleZerothLevelSkip
             6F5               6F5  handleAlgebraicExpression.handleZerothLevel
             70E               70E  handleAlgebraicExpression.varConstCheck
             71F               71F  handleAlgebraicExpression.varOrRNDFound
             74D               74D  handleAlgebraicExpression.exit
             74E               74E  handleAlgebraicExpression.varFound
             765               765  handleAlgebraicExpression.closeBracket
             76D               76D  handleAlgebraicExpression.error
             779               779  handleAlgebraicExpression.stack
             785               785  getNumericVariable
             7A5               7A5  getNumericVariable.exit
             7A9               7A9  getNumericVariable.noVar
             7AD               7AD  getNumericVariable.stringFoundError
             7B9               7B9  setNumericVariable
             7D9               7D9  setNumericVariable.exit
             7DD               7DD  setNumericVariable.makeEditInteger
             7E4               7E4  setNumericVariable.stringFoundError
             7F0               7F0  setStringVariable
             7FD               7FD  findOtherExpressionsOnLine
             806               806  findOtherExpressionsOnLine.exit
             807               807  funTbl
             890               890  whileStr
             8A8               8A8  thenStr
             8B0               8B0  elseStr
             94B               94B  badCmd
             957               957  endProg
             95C               95C  tron
             964               964  troff
             96C               96C  notWrapper
             974               974  memRead
             974               974  memWrite
             974               974  byteRead
             974               974  byteWrite
             975               975  remark
             97E               97E  oldSchoolAssignemnt
             983               983  variableAssignment
             9C6               9C6  variableAssignment.stringAssignment
             9E9               9E9  variableAssignment.syntaxError
             9F5               9F5  variableAssignment.typError
             A01               A01  newProgram
             A65               A65  listProgram
             A6C               A6C  listProgram.printLines
             AA0               AA0  listProgram.exit
             AA1               AA1  runProgram
             AC6               AC6  runProgram.endProgramPoint
             AD2               AD2  printStatement
             AD2               AD2  printStatement.printStart
             AE8               AE8  printStatement.printExpr
             AEB               AEB  printStatement.printExpr1
             AFC               AFC  printStatement.printStringVar
             B29               B29  printStatement.stringPrint
             B41               B41  printStatement.openSpeechMark
             B44               B44  printStatement.psvexitColon
             B47               B47  printStatement.psvexit
             B54               B54  printStatement.closespeechmarks
             B67               B67  printStatement.continue
             B71               B71  getInput
             B7B               B7B  getInput.customPrompt
             B7E               B7E  getInput.cp0
             B87               B87  getInput.error
             B93               B93  getInput.printCustomPrompt
             B96               B96  getInput.pcp0
             BA2               BA2  getInput.stopPrompt
             BB0               BB0  getInput.defaultPrompt
             BBA               BBA  getInput.noDefaultPrompt
             BF5               BF5  getInput.handleNumeric
             C04               C04  getInput.handleString
             C0F               C0F  getInput.commonExit
             C10               C10  returnToDOS
             C12               C12  cls
             C17               C17  dbgr
             C26               C26  dbgr.farReturn
             C4F               C4F  retScan
             C8E               C8E  retScan.initialSearch
             CA3               CA3  retScan.notCandidate
             CA8               CA8  retScan.gotoNextLine
             CBB               CBB  retScan.wordFound
             CD6               CD6  retScan.csumLoop
             CE4               CE4  retScan.exit
             CE6               CE6  retScan.noRet
             CFC               CFC  retScan.error
             D12               D12  wendScan
             D51               D51  wendScan.initialSearch
             D63               D63  wendScan.gotoNextLine
             D76               D76  wendScan.wordFound
             DA8               DA8  wendScan.csumLoop
             DB6               DB6  wendScan.exit
             DB8               DB8  wendScan.noWend
             DCE               DCE  wendScan.error
             DE4               DE4  nextScan
             E23               E23  nextScan.initialSearch
             E35               E35  nextScan.gotoNextLine
             E48               E48  nextScan.wordFound
             E7A               E7A  nextScan.csumLoop
             E88               E88  nextScan.exit
             E8A               E8A  nextScan.noNext
             EA0               EA0  nextScan.error
             EB6               EB6  goto
             ECB               ECB  gosub
             EFE               EFE  gosub.macroNotOverflow
             F0F               F0F  gosub.error
             F14               F14  return
             F2E               F2E  return.checksumTest
             F56               F56  return.noReturn
             F62               F62  forLoop
             F99               F99  forLoop.macroNotOverflow
             FAE               FAE  forLoop.flScanTo
             FC9               FC9  forLoop.flToFound
             FF9               FF9  forLoop.flVariable
            102D              102D  forLoop.exit
            1035              1035  forLoop.defaultStep
            103F              103F  forLoop.dontRunFor
            1059              1059  forLoop.unknownError
            1062              1062  forLoop.syntaxError
            1069              1069  forLoop.critError
            106E              106E  next
            1088              1088  next.checksumTest
            10B4              10B4  next.exit
            10BC              10BC  next.noMoreLooping
            10D6              10D6  next.noForNext
            10E2              10E2  while
            1115              1115  while.macroNotOverflow
            1136              1136  while.exit
            113E              113E  while.conditionFalse
            1154              1154  while.critError
            1159              1159  wend
            1177              1177  wend.checksumTest
            11A1              11A1  wend.whileScan
            11B2              11B2  wend.scanning
            11D3              11D3  wend.exit
            11DB              11DB  wend.conditionFalse
            11F1              11F1  wend.error
            11FD              11FD  wend.noWhile
            1209              1209  handleIf
            1236              1236  handleIf.candidatethen
            123D              123D  handleIf.else
            1267              1267  handleIf.hi0
            1294              1294  handleIf.noElse
            1295              1295  handleIf.error
            12A1              12A1  decimalToHex
            12A6              12A6  decimalToHex.processDigits
            12C2              12C2  decimalToHex.exit
            12C9              12C9  printdecimalword
            12EE              12EE  printdecimalword.noCompliment
            130B              130B  printdecimalword.pdw0
            131B              131B  printdecimalword.pdw1
            1330              1330  printdecimalword.printString
            133F              133F  allocateBlock
            1340              1340  allocateBlock.ab0
            1371              1371  allocateBlock.exit
            1373              1373  allocateBlock.memoryFull
            137F              137F  allocateBlock.firstAllocation
            139F              139F  findVariable
            13B4              13B4  findVariable.search
            13C0              13C0  findVariable.invalid
            13CF              13CF  findVariable.varFound
            13DE              13DE  findVariable.datFound
            13F0              13F0  findVariable.varNotFound
            13FA              13FA  findVariable.exit
            1400              1400  findFirstLine
            140F              140F  searchForProgramLine
            141F              141F  searchForProgramLine.search
            1432              1432  searchForProgramLine.lineFound
            1433              1433  insertProgramLine
            1453              1453  insertProgramLine.walk
            1467              1467  insertProgramLine.candidate
            1476              1476  insertProgramLine.sort
            1489              1489  insertProgramLine.skipLink
            1497              1497  insertProgramLine.first
            14A9              14A9  insertProgramLine.exit
            14AF              14AF  makeEditInteger
            14C2              14C2  makeEditInteger.newVar
            14EE              14EE  makeEditInteger.error
            14FA              14FA  makeEditString
            1534              1534  makeEditString.strcopy
            1548              1548  makeEditString.error
            1554              1554  terminatedstrcpy
            1555              1555  terminatedstrcpy.copy
            1565              1565  terminatedstrcpy.exit
            1567              1567  strcpy
            1570              1570  strlen
            157F              157F  memoryDetection
            15A0              15A0  prompt
            15A5              15A5  mainmsg
            15BC              15BC  cpyrt
            15F8              15F8  bytemsg
            1606              1606  crlf
            1609              1609  errmsg
            1611              1611  numbers
            161B              161B  varChrs
            1641              1641  noMem
            1651              1651  syntax
            1660              1660  typeError
            1670              1670  lineNoXist
            1688              1688  breakmsg
            1692              1692  stkOvflw
            16A3              16A3  noWend
            16B8              16B8  noWhile
            16CD              16CD  noFor
            16E0              16E0  noNext
            16F3              16F3  noReturn
            170A              170A  uknowner
            171E              171E  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            1731              2630  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
            1731              1731  oflowbuff
            1781              1781  stack
            24C1              24C1  stacktop
            24C9              24C9  inString
            25C9              25C9  digitString
            25F9              25F9  minMemAddr
            2601              2601  maxMemAddr
            2609              2609  strLen
            260A              260A  stateByte
            260B              260B  mcbChain
            2613              2613  lastBlock
            261B              261B  firstLinPtr
            2623              2623  firstLinNum
            2625              2625  currentLine
            2627              2627  bssLen

