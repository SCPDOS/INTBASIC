
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1782  00001782  progbits  .text
             EF6              1782              1782  00000000  progbits  programArea
               0                 0               EF6  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1782
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1782
align:                    1
follows:   not defined
vstart:                 EF6
valign:                   1
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
0000000D  CR
0000000A  LF
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              4F                4F  mainLoop
              80                80  mainLoop.ml0
              A2                A2  mainLoop.saveLine
              D0                D0  mainLoop.commonProc
              EA                EA  mainLoop.lineDoesntExist
              F1                F1  criticalError
             102               102  ctrlBreakHandler
             10B               10B  setHandler
             12B               12B  getLineInput
             148               148  getLineInput.getChar
             164               164  getLineInput.glibspace
             18D               18D  getLineInput.gliCheckCase
             19C               19C  getLineInput.gliccStore
             1A5               1A5  getLineInput.gliExtendedChar
             1A7               1A7  getLineInput.gliExit
             1B7               1B7  getLineInput.gliFull
             1C3               1C3  ttyOutChar
             1CF               1CF  ttyOutString
             1F4               1F4  ttyIn
             1FC               1FC  ttyClear
             215               215  keywordParser
             226               226  keywordParser.functionFinderLoop
             24A               24A  keywordParser.functionFound
             262               262  keywordParser.exit
             263               263  keywordParser.exitEmpty
             26E               26E  keywordParser.notLetVarAssignment
             277               277  runLine
             284               284  runLine.stringPortionProcess
             2C9               2C9  runLine.gotoNextLine
             2F3               2F3  runLine.gotoNextLineCommon
             2FF               2FF  runLine.exit
             300               300  runLine.ctrlFlowHandler
             328               328  runLine.badLineNumber
             334               334  runLine.tron
             360               360  runLine.break
             390               390  spaceSkip
             39A               39A  spaceSkip.exit
             39B               39B  getVarNameLength
             3A9               3A9  getVarNameLength.search
             3C0               3C0  getVarNameLength.exit
             3C8               3C8  getVarType
             3DF               3DF  getVarType.exit
             3E3               3E3  handleAlgebraicExpression
             3FB               3FB  handleAlgebraicExpression.handleFourthLevel
             400               400  handleAlgebraicExpression.parseLogicals
             45B               45B  handleAlgebraicExpression.rightShift
             46C               46C  handleAlgebraicExpression.leftShift
             47D               47D  handleAlgebraicExpression.rightRoll
             48E               48E  handleAlgebraicExpression.leftRoll
             49F               49F  handleAlgebraicExpression.imp
             4B1               4B1  handleAlgebraicExpression.not
             4BE               4BE  handleAlgebraicExpression.and
             4CD               4CD  handleAlgebraicExpression.or
             4DF               4DF  handleAlgebraicExpression.xor
             4EE               4EE  handleAlgebraicExpression.eqv
             500               500  handleAlgebraicExpression.handleThirdLevelSkip
             507               507  handleAlgebraicExpression.handleThirdLevel
             50C               50C  handleAlgebraicExpression.parseRelationals
             539               539  handleAlgebraicExpression.processGreater
             560               560  handleAlgebraicExpression.processLess
             587               587  handleAlgebraicExpression.processGeq
             5AB               5AB  handleAlgebraicExpression.processLeq
             5CF               5CF  handleAlgebraicExpression.processEq
             5F0               5F0  handleAlgebraicExpression.processNeq
             614               614  handleAlgebraicExpression.handleSecondLevelSkip
             617               617  handleAlgebraicExpression.handleSecondLevel
             61C               61C  handleAlgebraicExpression.parseAdditiveOperators
             630               630  handleAlgebraicExpression.processAdd
             636               636  handleAlgebraicExpression.processMinus
             641               641  handleAlgebraicExpression.handleFirstLevelSkip
             644               644  handleAlgebraicExpression.handleFirstLevel
             649               649  handleAlgebraicExpression.parseProductOperators
             686               686  handleAlgebraicExpression.processMult
             692               692  handleAlgebraicExpression.processDiv
             6AA               6AA  handleAlgebraicExpression.divByZero
             6C8               6C8  handleAlgebraicExpression.exponentFound
             6D8               6D8  handleAlgebraicExpression.imulLoop
             6E8               6E8  handleAlgebraicExpression.handleZerothLevelSkip
             6EB               6EB  handleAlgebraicExpression.handleZerothLevel
             704               704  handleAlgebraicExpression.varConstCheck
             715               715  handleAlgebraicExpression.varOrRNDFound
             743               743  handleAlgebraicExpression.exit
             744               744  handleAlgebraicExpression.varFound
             75B               75B  handleAlgebraicExpression.closeBracket
             763               763  handleAlgebraicExpression.error
             76F               76F  handleAlgebraicExpression.stack
             77B               77B  getNumericVariable
             79B               79B  getNumericVariable.exit
             79F               79F  getNumericVariable.noVar
             7A3               7A3  getNumericVariable.stringFoundError
             7AF               7AF  setNumericVariable
             7CF               7CF  setNumericVariable.exit
             7D3               7D3  setNumericVariable.makeEditInteger
             7DA               7DA  setNumericVariable.stringFoundError
             7E6               7E6  setStringVariable
             7F3               7F3  findOtherExpressionsOnLine
             7FC               7FC  findOtherExpressionsOnLine.exit
             7FD               7FD  funTbl
             886               886  whileStr
             89E               89E  thenStr
             8A6               8A6  elseStr
             941               941  badCmd
             94D               94D  endProg
             952               952  tron
             95A               95A  troff
             962               962  notWrapper
             96A               96A  memRead
             96A               96A  memWrite
             96A               96A  byteRead
             96A               96A  byteWrite
             96B               96B  remark
             974               974  oldSchoolAssignemnt
             979               979  variableAssignment
             9BC               9BC  variableAssignment.stringAssignment
             9DF               9DF  variableAssignment.syntaxError
             9EB               9EB  variableAssignment.typError
             9F7               9F7  newProgram
             A5B               A5B  listProgram
             A62               A62  listProgram.printLines
             A96               A96  listProgram.exit
             A97               A97  runProgram
             ABC               ABC  runProgram.endProgramPoint
             AC8               AC8  printStatement
             AC8               AC8  printStatement.printStart
             ADE               ADE  printStatement.printExpr
             AE1               AE1  printStatement.printExpr1
             AF2               AF2  printStatement.printStringVar
             B1F               B1F  printStatement.stringPrint
             B37               B37  printStatement.openSpeechMark
             B3A               B3A  printStatement.psvexitColon
             B3D               B3D  printStatement.psvexit
             B4A               B4A  printStatement.closespeechmarks
             B5D               B5D  printStatement.continue
             B67               B67  getInput
             B71               B71  getInput.customPrompt
             B74               B74  getInput.cp0
             B7D               B7D  getInput.error
             B89               B89  getInput.printCustomPrompt
             B8C               B8C  getInput.pcp0
             B98               B98  getInput.stopPrompt
             BA6               BA6  getInput.defaultPrompt
             BB0               BB0  getInput.noDefaultPrompt
             BEB               BEB  getInput.handleNumeric
             BFA               BFA  getInput.handleString
             C05               C05  getInput.commonExit
             C06               C06  returnToDOS
             C12               C12  cls
             C17               C17  dbgr
             C37               C37  dbgr.farReturn
             C60               C60  retScan
             C9F               C9F  retScan.initialSearch
             CB4               CB4  retScan.notCandidate
             CB9               CB9  retScan.gotoNextLine
             CCC               CCC  retScan.wordFound
             CE7               CE7  retScan.csumLoop
             CF5               CF5  retScan.exit
             CF7               CF7  retScan.noRet
             D0D               D0D  retScan.error
             D23               D23  wendScan
             D62               D62  wendScan.initialSearch
             D74               D74  wendScan.gotoNextLine
             D87               D87  wendScan.wordFound
             DB9               DB9  wendScan.csumLoop
             DC7               DC7  wendScan.exit
             DC9               DC9  wendScan.noWend
             DDF               DDF  wendScan.error
             DF5               DF5  nextScan
             E34               E34  nextScan.initialSearch
             E46               E46  nextScan.gotoNextLine
             E59               E59  nextScan.wordFound
             E8B               E8B  nextScan.csumLoop
             E99               E99  nextScan.exit
             E9B               E9B  nextScan.noNext
             EB1               EB1  nextScan.error
             EC7               EC7  goto
             EDC               EDC  gosub
             F0F               F0F  gosub.macroNotOverflow
             F20               F20  gosub.error
             F25               F25  return
             F3F               F3F  return.checksumTest
             F67               F67  return.noReturn
             F73               F73  forLoop
             FAA               FAA  forLoop.macroNotOverflow
             FBF               FBF  forLoop.flScanTo
             FDA               FDA  forLoop.flToFound
            100A              100A  forLoop.flVariable
            103E              103E  forLoop.exit
            1046              1046  forLoop.defaultStep
            1050              1050  forLoop.dontRunFor
            106A              106A  forLoop.unknownError
            1073              1073  forLoop.syntaxError
            107A              107A  forLoop.critError
            107F              107F  next
            1099              1099  next.checksumTest
            10C5              10C5  next.exit
            10CD              10CD  next.noMoreLooping
            10E7              10E7  next.noForNext
            10F3              10F3  while
            1126              1126  while.macroNotOverflow
            1147              1147  while.exit
            114F              114F  while.conditionFalse
            1165              1165  while.critError
            116A              116A  wend
            1188              1188  wend.checksumTest
            11B2              11B2  wend.whileScan
            11C3              11C3  wend.scanning
            11E4              11E4  wend.exit
            11EC              11EC  wend.conditionFalse
            1202              1202  wend.error
            120E              120E  wend.noWhile
            121A              121A  handleIf
            1247              1247  handleIf.candidatethen
            124E              124E  handleIf.else
            1278              1278  handleIf.hi0
            12A5              12A5  handleIf.noElse
            12A6              12A6  handleIf.error
            12B2              12B2  decimalToHex
            12B7              12B7  decimalToHex.processDigits
            12D3              12D3  decimalToHex.exit
            12DA              12DA  printdecimalword
            12FF              12FF  printdecimalword.noCompliment
            131C              131C  printdecimalword.pdw0
            132C              132C  printdecimalword.pdw1
            1341              1341  printdecimalword.printString
            1350              1350  allocateBlock
            1351              1351  allocateBlock.ab0
            1382              1382  allocateBlock.exit
            1384              1384  allocateBlock.memoryFull
            1390              1390  allocateBlock.firstAllocation
            13B0              13B0  findVariable
            13C5              13C5  findVariable.search
            13D1              13D1  findVariable.invalid
            13E0              13E0  findVariable.varFound
            13EF              13EF  findVariable.datFound
            1401              1401  findVariable.varNotFound
            140B              140B  findVariable.exit
            1411              1411  findFirstLine
            1420              1420  searchForProgramLine
            1430              1430  searchForProgramLine.search
            1443              1443  searchForProgramLine.lineFound
            1444              1444  insertProgramLine
            1464              1464  insertProgramLine.walk
            1478              1478  insertProgramLine.candidate
            1487              1487  insertProgramLine.sort
            149A              149A  insertProgramLine.skipLink
            14A8              14A8  insertProgramLine.first
            14BA              14BA  insertProgramLine.exit
            14C0              14C0  makeEditInteger
            14D3              14D3  makeEditInteger.newVar
            14FF              14FF  makeEditInteger.error
            150B              150B  makeEditString
            1545              1545  makeEditString.strcopy
            1559              1559  makeEditString.error
            1565              1565  terminatedstrcpy
            1566              1566  terminatedstrcpy.copy
            1576              1576  terminatedstrcpy.exit
            1578              1578  strcpy
            1581              1581  strlen
            1585              1585  strlen.search
            158C              158C  strlen.exit
            158F              158F  memoryDetection
            1598              1598  memoryDetection.findStartAddr
            159F              159F  memoryDetection.fsa1
            15CF              15CF  memoryDetection.exit
            15D0              15D0  memoryDetection.worstCase
            15F1              15F1  prompt
            15F6              15F6  mainmsg
            160D              160D  cpyrt
            1649              1649  bytemsg
            1657              1657  crlf
            165A              165A  errmsg
            1662              1662  numbers
            166C              166C  varChrs
            1692              1692  noMem
            16A2              16A2  syntax
            16B1              16B1  typeError
            16C1              16C1  lineNoXist
            16D9              16D9  breakmsg
            16E3              16E3  stkOvflw
            16F4              16F4  noWend
            1709              1709  noWhile
            171E              171E  noFor
            1731              1731  noNext
            1744              1744  noReturn
            175B              175B  uknowner
            176F              176F  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            1782               EF6  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  oflowbuff
              50                50  stack
             D90               D90  stacktop
             D98               D98  inString
             E98               E98  digitString
             EC8               EC8  minMemAddr
             ED0               ED0  maxMemAddr
             ED8               ED8  strLen
             ED9               ED9  stateByte
             EDA               EDA  mcbChain
             EE2               EE2  lastBlock
             EEA               EEA  firstLinPtr
             EF2               EF2  firstLinNum
             EF4               EF4  currentLine
             EF6               EF6  bssLen

