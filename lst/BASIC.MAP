
- NASM Map file ---------------------------------------------------------------

Source file:  ./BASIC.ASM
Output file:  ./bin/BASIC.COM

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0              1778  00001778  progbits  .text
             EF6              1778              1778  00000000  progbits  programArea
               0                 0               EF6  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                1778
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:                   1
vfollows:  not defined

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                 1778
align:                    1
follows:   not defined
vstart:                 EF6
valign:                   1
vfollows:  dSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000055  WHILEsig
0000005A  FORsig
000000A5  GOSUBsig
00000000  forStruct
00000000  forStruct.specQword
00000008  forStruct.cntrPtr
00000010  forStruct.limitValue
00000018  forStruct.stepValue
00000020  forStruct_size
00000000  whileStruct
00000000  whileStruct.specQword
00000008  whileStruct_size
00000000  gosubStruct
00000000  gosubStruct.specQword
00000008  gosubStruct_size
00000026  numVarChars
0000000D  CR
0000000A  LF
00000100  maxLineLen
00000030  digitStringLen


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
               0                 0  start
              4F                4F  mainLoop
              80                80  mainLoop.ml0
              A2                A2  mainLoop.saveLine
              D0                D0  mainLoop.commonProc
              EA                EA  mainLoop.lineDoesntExist
              F1                F1  criticalError
             102               102  ctrlBreakHandler
             10B               10B  setHandler
             12B               12B  getLineInput
             148               148  getLineInput.getChar
             164               164  getLineInput.glibspace
             18D               18D  getLineInput.gliCheckCase
             19C               19C  getLineInput.gliccStore
             1A5               1A5  getLineInput.gliExtendedChar
             1A7               1A7  getLineInput.gliExit
             1B7               1B7  getLineInput.gliFull
             1C3               1C3  ttyOutChar
             1CF               1CF  ttyOutString
             1F4               1F4  ttyIn
             1FC               1FC  ttyClear
             215               215  keywordParser
             226               226  keywordParser.functionFinderLoop
             24A               24A  keywordParser.functionFound
             262               262  keywordParser.exit
             263               263  keywordParser.exitEmpty
             26E               26E  keywordParser.notLetVarAssignment
             277               277  runLine
             284               284  runLine.stringPortionProcess
             2C9               2C9  runLine.gotoNextLine
             2F3               2F3  runLine.gotoNextLineCommon
             2FF               2FF  runLine.exit
             300               300  runLine.ctrlFlowHandler
             328               328  runLine.badLineNumber
             334               334  runLine.tron
             360               360  runLine.break
             390               390  spaceSkip
             39A               39A  spaceSkip.exit
             39B               39B  getVarNameLength
             3A9               3A9  getVarNameLength.search
             3C0               3C0  getVarNameLength.exit
             3C8               3C8  getVarType
             3DF               3DF  getVarType.exit
             3E3               3E3  handleAlgebraicExpression
             3FB               3FB  handleAlgebraicExpression.handleFourthLevel
             400               400  handleAlgebraicExpression.parseLogicals
             45B               45B  handleAlgebraicExpression.rightShift
             46C               46C  handleAlgebraicExpression.leftShift
             47D               47D  handleAlgebraicExpression.rightRoll
             48E               48E  handleAlgebraicExpression.leftRoll
             49F               49F  handleAlgebraicExpression.imp
             4B1               4B1  handleAlgebraicExpression.not
             4BE               4BE  handleAlgebraicExpression.and
             4CD               4CD  handleAlgebraicExpression.or
             4DF               4DF  handleAlgebraicExpression.xor
             4EE               4EE  handleAlgebraicExpression.eqv
             500               500  handleAlgebraicExpression.handleThirdLevelSkip
             507               507  handleAlgebraicExpression.handleThirdLevel
             50C               50C  handleAlgebraicExpression.parseRelationals
             539               539  handleAlgebraicExpression.processGreater
             560               560  handleAlgebraicExpression.processLess
             587               587  handleAlgebraicExpression.processGeq
             5AB               5AB  handleAlgebraicExpression.processLeq
             5CF               5CF  handleAlgebraicExpression.processEq
             5F0               5F0  handleAlgebraicExpression.processNeq
             614               614  handleAlgebraicExpression.handleSecondLevelSkip
             617               617  handleAlgebraicExpression.handleSecondLevel
             61C               61C  handleAlgebraicExpression.parseAdditiveOperators
             630               630  handleAlgebraicExpression.processAdd
             636               636  handleAlgebraicExpression.processMinus
             641               641  handleAlgebraicExpression.handleFirstLevelSkip
             644               644  handleAlgebraicExpression.handleFirstLevel
             649               649  handleAlgebraicExpression.parseProductOperators
             686               686  handleAlgebraicExpression.processMult
             692               692  handleAlgebraicExpression.processDiv
             6AA               6AA  handleAlgebraicExpression.divByZero
             6C8               6C8  handleAlgebraicExpression.exponentFound
             6D8               6D8  handleAlgebraicExpression.imulLoop
             6E8               6E8  handleAlgebraicExpression.handleZerothLevelSkip
             6EB               6EB  handleAlgebraicExpression.handleZerothLevel
             704               704  handleAlgebraicExpression.varConstCheck
             715               715  handleAlgebraicExpression.varOrRNDFound
             743               743  handleAlgebraicExpression.exit
             744               744  handleAlgebraicExpression.varFound
             75B               75B  handleAlgebraicExpression.closeBracket
             763               763  handleAlgebraicExpression.error
             76F               76F  handleAlgebraicExpression.stack
             77B               77B  getNumericVariable
             79B               79B  getNumericVariable.exit
             79F               79F  getNumericVariable.noVar
             7A3               7A3  getNumericVariable.stringFoundError
             7AF               7AF  setNumericVariable
             7CF               7CF  setNumericVariable.exit
             7D3               7D3  setNumericVariable.makeEditInteger
             7DA               7DA  setNumericVariable.stringFoundError
             7E6               7E6  setStringVariable
             7F3               7F3  findOtherExpressionsOnLine
             7FC               7FC  findOtherExpressionsOnLine.exit
             7FD               7FD  funTbl
             886               886  whileStr
             89E               89E  thenStr
             8A6               8A6  elseStr
             941               941  badCmd
             94D               94D  endProg
             952               952  tron
             95A               95A  troff
             962               962  notWrapper
             96A               96A  memRead
             96A               96A  memWrite
             96A               96A  byteRead
             96A               96A  byteWrite
             96B               96B  remark
             974               974  oldSchoolAssignemnt
             979               979  variableAssignment
             9BC               9BC  variableAssignment.stringAssignment
             9DF               9DF  variableAssignment.syntaxError
             9EB               9EB  variableAssignment.typError
             9F7               9F7  newProgram
             A5B               A5B  listProgram
             A62               A62  listProgram.printLines
             A96               A96  listProgram.exit
             A97               A97  runProgram
             ABC               ABC  runProgram.endProgramPoint
             AC8               AC8  printStatement
             AC8               AC8  printStatement.printStart
             ADE               ADE  printStatement.printExpr
             AE1               AE1  printStatement.printExpr1
             AF2               AF2  printStatement.printStringVar
             B1F               B1F  printStatement.stringPrint
             B37               B37  printStatement.openSpeechMark
             B3A               B3A  printStatement.psvexitColon
             B3D               B3D  printStatement.psvexit
             B4A               B4A  printStatement.closespeechmarks
             B5D               B5D  printStatement.continue
             B67               B67  getInput
             B71               B71  getInput.customPrompt
             B74               B74  getInput.cp0
             B7D               B7D  getInput.error
             B89               B89  getInput.printCustomPrompt
             B8C               B8C  getInput.pcp0
             B98               B98  getInput.stopPrompt
             BA6               BA6  getInput.defaultPrompt
             BB0               BB0  getInput.noDefaultPrompt
             BEB               BEB  getInput.handleNumeric
             BFA               BFA  getInput.handleString
             C05               C05  getInput.commonExit
             C06               C06  returnToDOS
             C08               C08  cls
             C0D               C0D  dbgr
             C2D               C2D  dbgr.farReturn
             C56               C56  retScan
             C95               C95  retScan.initialSearch
             CAA               CAA  retScan.notCandidate
             CAF               CAF  retScan.gotoNextLine
             CC2               CC2  retScan.wordFound
             CDD               CDD  retScan.csumLoop
             CEB               CEB  retScan.exit
             CED               CED  retScan.noRet
             D03               D03  retScan.error
             D19               D19  wendScan
             D58               D58  wendScan.initialSearch
             D6A               D6A  wendScan.gotoNextLine
             D7D               D7D  wendScan.wordFound
             DAF               DAF  wendScan.csumLoop
             DBD               DBD  wendScan.exit
             DBF               DBF  wendScan.noWend
             DD5               DD5  wendScan.error
             DEB               DEB  nextScan
             E2A               E2A  nextScan.initialSearch
             E3C               E3C  nextScan.gotoNextLine
             E4F               E4F  nextScan.wordFound
             E81               E81  nextScan.csumLoop
             E8F               E8F  nextScan.exit
             E91               E91  nextScan.noNext
             EA7               EA7  nextScan.error
             EBD               EBD  goto
             ED2               ED2  gosub
             F05               F05  gosub.macroNotOverflow
             F16               F16  gosub.error
             F1B               F1B  return
             F35               F35  return.checksumTest
             F5D               F5D  return.noReturn
             F69               F69  forLoop
             FA0               FA0  forLoop.macroNotOverflow
             FB5               FB5  forLoop.flScanTo
             FD0               FD0  forLoop.flToFound
            1000              1000  forLoop.flVariable
            1034              1034  forLoop.exit
            103C              103C  forLoop.defaultStep
            1046              1046  forLoop.dontRunFor
            1060              1060  forLoop.unknownError
            1069              1069  forLoop.syntaxError
            1070              1070  forLoop.critError
            1075              1075  next
            108F              108F  next.checksumTest
            10BB              10BB  next.exit
            10C3              10C3  next.noMoreLooping
            10DD              10DD  next.noForNext
            10E9              10E9  while
            111C              111C  while.macroNotOverflow
            113D              113D  while.exit
            1145              1145  while.conditionFalse
            115B              115B  while.critError
            1160              1160  wend
            117E              117E  wend.checksumTest
            11A8              11A8  wend.whileScan
            11B9              11B9  wend.scanning
            11DA              11DA  wend.exit
            11E2              11E2  wend.conditionFalse
            11F8              11F8  wend.error
            1204              1204  wend.noWhile
            1210              1210  handleIf
            123D              123D  handleIf.candidatethen
            1244              1244  handleIf.else
            126E              126E  handleIf.hi0
            129B              129B  handleIf.noElse
            129C              129C  handleIf.error
            12A8              12A8  decimalToHex
            12AD              12AD  decimalToHex.processDigits
            12C9              12C9  decimalToHex.exit
            12D0              12D0  printdecimalword
            12F5              12F5  printdecimalword.noCompliment
            1312              1312  printdecimalword.pdw0
            1322              1322  printdecimalword.pdw1
            1337              1337  printdecimalword.printString
            1346              1346  allocateBlock
            1347              1347  allocateBlock.ab0
            1378              1378  allocateBlock.exit
            137A              137A  allocateBlock.memoryFull
            1386              1386  allocateBlock.firstAllocation
            13A6              13A6  findVariable
            13BB              13BB  findVariable.search
            13C7              13C7  findVariable.invalid
            13D6              13D6  findVariable.varFound
            13E5              13E5  findVariable.datFound
            13F7              13F7  findVariable.varNotFound
            1401              1401  findVariable.exit
            1407              1407  findFirstLine
            1416              1416  searchForProgramLine
            1426              1426  searchForProgramLine.search
            1439              1439  searchForProgramLine.lineFound
            143A              143A  insertProgramLine
            145A              145A  insertProgramLine.walk
            146E              146E  insertProgramLine.candidate
            147D              147D  insertProgramLine.sort
            1490              1490  insertProgramLine.skipLink
            149E              149E  insertProgramLine.first
            14B0              14B0  insertProgramLine.exit
            14B6              14B6  makeEditInteger
            14C9              14C9  makeEditInteger.newVar
            14F5              14F5  makeEditInteger.error
            1501              1501  makeEditString
            153B              153B  makeEditString.strcopy
            154F              154F  makeEditString.error
            155B              155B  terminatedstrcpy
            155C              155C  terminatedstrcpy.copy
            156C              156C  terminatedstrcpy.exit
            156E              156E  strcpy
            1577              1577  strlen
            157B              157B  strlen.search
            1582              1582  strlen.exit
            1585              1585  memoryDetection
            158E              158E  memoryDetection.findStartAddr
            1595              1595  memoryDetection.fsa1
            15C5              15C5  memoryDetection.exit
            15C6              15C6  memoryDetection.worstCase
            15E7              15E7  prompt
            15EC              15EC  mainmsg
            1603              1603  cpyrt
            163F              163F  bytemsg
            164D              164D  crlf
            1650              1650  errmsg
            1658              1658  numbers
            1662              1662  varChrs
            1688              1688  noMem
            1698              1698  syntax
            16A7              16A7  typeError
            16B7              16B7  lineNoXist
            16CF              16CF  breakmsg
            16D9              16D9  stkOvflw
            16EA              16EA  noWend
            16FF              16FF  noWhile
            1714              1714  noFor
            1727              1727  noNext
            173A              173A  noReturn
            1751              1751  uknowner
            1765              1765  divZer

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
            1778               EF6  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  oflowbuff
              50                50  stack
             D90               D90  stacktop
             D98               D98  inString
             E98               E98  digitString
             EC8               EC8  minMemAddr
             ED0               ED0  maxMemAddr
             ED8               ED8  strLen
             ED9               ED9  stateByte
             EDA               EDA  mcbChain
             EE2               EE2  lastBlock
             EEA               EEA  firstLinPtr
             EF2               EF2  firstLinNum
             EF4               EF4  currentLine
             EF6               EF6  bssLen

